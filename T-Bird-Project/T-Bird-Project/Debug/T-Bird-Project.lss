
T-Bird-Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  000008f4  00000988  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  00800110  00800110  00000998  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000998  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000a04  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d81  00000000  00000000  00000a84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a3e  00000000  00000000  00001805  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000066d  00000000  00000000  00002243  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001ac  00000000  00000000  000028b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004dd  00000000  00000000  00002a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000057d  00000000  00000000  00002f39  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000034b6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	43 c0       	rjmp	.+134    	; 0xc8 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 ef       	ldi	r30, 0xF4	; 244
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 31       	cpi	r26, 0x10	; 16
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e1       	ldi	r26, 0x10	; 16
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ad 32       	cpi	r26, 0x2D	; 45
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	6e d0       	rcall	.+220    	; 0x1a0 <main>
  c4:	15 c4       	rjmp	.+2090   	; 0x8f0 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_16>:
	}
}


ISR(TIMER0_OVF_vect)
{
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	0b b6       	in	r0, 0x3b	; 59
  d4:	0f 92       	push	r0
  d6:	2f 93       	push	r18
  d8:	3f 93       	push	r19
  da:	4f 93       	push	r20
  dc:	5f 93       	push	r21
  de:	6f 93       	push	r22
  e0:	7f 93       	push	r23
  e2:	8f 93       	push	r24
  e4:	9f 93       	push	r25
  e6:	af 93       	push	r26
  e8:	bf 93       	push	r27
  ea:	ef 93       	push	r30
  ec:	ff 93       	push	r31
	rgb_pwm_handling();
  ee:	a1 d1       	rcall	.+834    	; 0x432 <rgb_pwm_handling>
	
	//sevenSegment_PutNumber(timerNum);
	

	if (!ido--)
  f0:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <ido>
  f4:	9f ef       	ldi	r25, 0xFF	; 255
  f6:	98 0f       	add	r25, r24
  f8:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <ido>
  fc:	81 11       	cpse	r24, r1
  fe:	10 c0       	rjmp	.+32     	; 0x120 <__vector_16+0x58>
	{
		// 7segmens szamlalo
		timerNum++;
 100:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 104:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x1>
 108:	01 96       	adiw	r24, 0x01	; 1
 10a:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__data_end+0x1>
 10e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
		if (timerNum == 9999)
 112:	8f 30       	cpi	r24, 0x0F	; 15
 114:	97 42       	sbci	r25, 0x27	; 39
 116:	21 f4       	brne	.+8      	; 0x120 <__vector_16+0x58>
		{
			timerNum = 0;
 118:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <__data_end+0x1>
 11c:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
		}
	}
}
 120:	ff 91       	pop	r31
 122:	ef 91       	pop	r30
 124:	bf 91       	pop	r27
 126:	af 91       	pop	r26
 128:	9f 91       	pop	r25
 12a:	8f 91       	pop	r24
 12c:	7f 91       	pop	r23
 12e:	6f 91       	pop	r22
 130:	5f 91       	pop	r21
 132:	4f 91       	pop	r20
 134:	3f 91       	pop	r19
 136:	2f 91       	pop	r18
 138:	0f 90       	pop	r0
 13a:	0b be       	out	0x3b, r0	; 59
 13c:	0f 90       	pop	r0
 13e:	0f be       	out	0x3f, r0	; 63
 140:	0f 90       	pop	r0
 142:	1f 90       	pop	r1
 144:	18 95       	reti

00000146 <init>:
void init()
{
	// 1 - output
	// 0 - input

	DDRB &= 0x0F;	// led mask	-> 00001111 (0 - 3)
 146:	87 b3       	in	r24, 0x17	; 23
 148:	8f 70       	andi	r24, 0x0F	; 15
 14a:	87 bb       	out	0x17, r24	; 23
	DDRB |= 0xF0;	// led		-> 11110000 (0 - 3)
 14c:	87 b3       	in	r24, 0x17	; 23
 14e:	80 6f       	ori	r24, 0xF0	; 240
 150:	87 bb       	out	0x17, r24	; 23
	DDRD &= 0x0F;	// led mask	-> 00001111 (0 - 3)
 152:	81 b3       	in	r24, 0x11	; 17
 154:	8f 70       	andi	r24, 0x0F	; 15
 156:	81 bb       	out	0x11, r24	; 17
	DDRD |= 0xF0;	// led		-> 11110000 (4 - 7)
 158:	81 b3       	in	r24, 0x11	; 17
 15a:	80 6f       	ori	r24, 0xF0	; 240
 15c:	81 bb       	out	0x11, r24	; 17

	//DDRG = 0x00;	// Pushbuttons K0-K4
	DDRG &= 0xE0;	// Pushbuttons mask	-> 11100000	(K0 - K4)
 15e:	e4 e6       	ldi	r30, 0x64	; 100
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	80 81       	ld	r24, Z
 164:	80 7e       	andi	r24, 0xE0	; 224
 166:	80 83       	st	Z, r24
	DDRG |= 0x00;	// Pushbuttons		-> 00000000 (K0 - K4)
 168:	80 81       	ld	r24, Z
 16a:	80 83       	st	Z, r24
	
	DDRE &= 0xF3;	// RGB mask	-> 11110011 (Blue & Green)
 16c:	82 b1       	in	r24, 0x02	; 2
 16e:	83 7f       	andi	r24, 0xF3	; 243
 170:	82 b9       	out	0x02, r24	; 2
	DDRE |= 0x0C;	// RGB led	-> 00001100 (Blue & Green)
 172:	82 b1       	in	r24, 0x02	; 2
 174:	8c 60       	ori	r24, 0x0C	; 12
 176:	82 b9       	out	0x02, r24	; 2
	DDRC &= 0x7F;	// RGB mask	-> 01111111 (Red)
 178:	84 b3       	in	r24, 0x14	; 20
 17a:	8f 77       	andi	r24, 0x7F	; 127
 17c:	84 bb       	out	0x14, r24	; 20
	DDRC |= 80;		// RGB led	-> 10000000 (Red)
 17e:	84 b3       	in	r24, 0x14	; 20
 180:	80 65       	ori	r24, 0x50	; 80
 182:	84 bb       	out	0x14, r24	; 20
	
	DDRA = 0xFF;	// 7 Segment display
 184:	8f ef       	ldi	r24, 0xFF	; 255
 186:	8a bb       	out	0x1a, r24	; 26
	
	// Matrix keyboard
	DDRC &= 0x80;	// Matrix mask	->	10000000
 188:	84 b3       	in	r24, 0x14	; 20
 18a:	80 78       	andi	r24, 0x80	; 128
 18c:	84 bb       	out	0x14, r24	; 20
	DDRC |= 0x78;	// Matrix		->	01111000
 18e:	84 b3       	in	r24, 0x14	; 20
 190:	88 67       	ori	r24, 0x78	; 120
 192:	84 bb       	out	0x14, r24	; 20
	
	
	// Timer init:
	TCCR0 = 0 << CS02 | 1 << CS01 | 0 << CS00 | 1 << WGM00 | 1 << WGM01;
 194:	8a e4       	ldi	r24, 0x4A	; 74
 196:	83 bf       	out	0x33, r24	; 51
	//TCCR0 = 1 << CS01 | 1 << CS00;
	TIMSK = 1 << TOIE0;				// OverFlow enable
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	87 bf       	out	0x37, r24	; 55
	sei();
 19c:	78 94       	sei
 19e:	08 95       	ret

000001a0 <main>:
uint8_t b;


int main(void)
{
	init();
 1a0:	d2 df       	rcall	.-92     	; 0x146 <init>
	
	while (1)
	{
		//rgb_Show(0, 0, 100, 100);
		rgb_Rainbow();
 1a2:	94 d0       	rcall	.+296    	; 0x2cc <rgb_Rainbow>
		b = matrix();
 1a4:	07 d0       	rcall	.+14     	; 0x1b4 <matrix>
 1a6:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <b>
 1aa:	8a 30       	cpi	r24, 0x0A	; 10
		if (b <= 9)
 1ac:	d0 f7       	brcc	.-12     	; 0x1a2 <main+0x2>
 1ae:	80 68       	ori	r24, 0x80	; 128
		{
			PORTA = 0x80 | b;
 1b0:	8b bb       	out	0x1b, r24	; 27
 1b2:	f7 cf       	rjmp	.-18     	; 0x1a2 <main+0x2>

000001b4 <matrix>:
 1b4:	38 e0       	ldi	r19, 0x08	; 8
{
	uint8_t sor = 0x08;		// elso sor
	uint8_t beolvas = 0;
	uint8_t i = 0;
	
	while (sor <= 0x40)
 1b6:	1b c0       	rjmp	.+54     	; 0x1ee <matrix+0x3a>
	{
		PORTC &= 0x80;
 1b8:	85 b3       	in	r24, 0x15	; 21
 1ba:	80 78       	andi	r24, 0x80	; 128
 1bc:	85 bb       	out	0x15, r24	; 21
		PORTC |= sor;			// megcimezzuk a sort
 1be:	85 b3       	in	r24, 0x15	; 21
 1c0:	83 2b       	or	r24, r19
 1c2:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c4:	8f e0       	ldi	r24, 0x0F	; 15
 1c6:	97 e2       	ldi	r25, 0x27	; 39
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <matrix+0x14>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <matrix+0x1a>
 1ce:	00 00       	nop
		_delay_ms(5);
		
		beolvas = PINC & 0x7F;	// ne modositsa az RGB piros allpota.
 1d0:	23 b3       	in	r18, 0x13	; 19
 1d2:	2f 77       	andi	r18, 0x7F	; 127
		
		while(i < 12)
 1d4:	80 e0       	ldi	r24, 0x00	; 0
 1d6:	08 c0       	rjmp	.+16     	; 0x1e8 <matrix+0x34>
		{
			if (bill[i] == beolvas)
 1d8:	e8 2f       	mov	r30, r24
 1da:	f0 e0       	ldi	r31, 0x00	; 0
 1dc:	ed 5f       	subi	r30, 0xFD	; 253
 1de:	fe 4f       	sbci	r31, 0xFE	; 254
 1e0:	90 81       	ld	r25, Z
 1e2:	29 17       	cp	r18, r25
 1e4:	39 f0       	breq	.+14     	; 0x1f4 <matrix+0x40>
			{
				return i;
			}
			i++;
 1e6:	8f 5f       	subi	r24, 0xFF	; 255
		PORTC |= sor;			// megcimezzuk a sort
		_delay_ms(5);
		
		beolvas = PINC & 0x7F;	// ne modositsa az RGB piros allpota.
		
		while(i < 12)
 1e8:	8c 30       	cpi	r24, 0x0C	; 12
 1ea:	b0 f3       	brcs	.-20     	; 0x1d8 <matrix+0x24>
				return i;
			}
			i++;
		}
		i = 0;
		sor<<=1;
 1ec:	33 0f       	add	r19, r19
{
	uint8_t sor = 0x08;		// elso sor
	uint8_t beolvas = 0;
	uint8_t i = 0;
	
	while (sor <= 0x40)
 1ee:	31 34       	cpi	r19, 0x41	; 65
 1f0:	18 f3       	brcs	.-58     	; 0x1b8 <matrix+0x4>
			i++;
		}
		i = 0;
		sor<<=1;
	}
	return 12;
 1f2:	8c e0       	ldi	r24, 0x0C	; 12
 1f4:	08 95       	ret

000001f6 <rgb_Show>:
float pwm_blue = 0;				float h_blue = 0;
uint8_t rgb_enable = 1;


void rgb_Show(float r, float g, float b, uint8_t brightness)
{
 1f6:	4f 92       	push	r4
 1f8:	5f 92       	push	r5
 1fa:	6f 92       	push	r6
 1fc:	7f 92       	push	r7
 1fe:	8f 92       	push	r8
 200:	9f 92       	push	r9
 202:	af 92       	push	r10
 204:	bf 92       	push	r11
 206:	cf 92       	push	r12
 208:	df 92       	push	r13
 20a:	ef 92       	push	r14
 20c:	ff 92       	push	r15
 20e:	0f 93       	push	r16
 210:	1f 93       	push	r17
 212:	cf 93       	push	r28
 214:	df 93       	push	r29
 216:	00 d0       	rcall	.+0      	; 0x218 <rgb_Show+0x22>
 218:	00 d0       	rcall	.+0      	; 0x21a <rgb_Show+0x24>
 21a:	cd b7       	in	r28, 0x3d	; 61
 21c:	de b7       	in	r29, 0x3e	; 62
	// RED -> C7 (0x80), GREEN -> E2 (0x04), BLUE -> E3 (0x08)
	float x = 100 / brightness;

	if(brightness != 0)
 21e:	cc 20       	and	r12, r12
 220:	09 f4       	brne	.+2      	; 0x224 <rgb_Show+0x2e>
 222:	3f c0       	rjmp	.+126    	; 0x2a2 <rgb_Show+0xac>
 224:	e9 82       	std	Y+1, r14	; 0x01
 226:	fa 82       	std	Y+2, r15	; 0x02
 228:	0b 83       	std	Y+3, r16	; 0x03
 22a:	1c 83       	std	Y+4, r17	; 0x04
 22c:	49 01       	movw	r8, r18
 22e:	5a 01       	movw	r10, r20
 230:	2b 01       	movw	r4, r22
 232:	3c 01       	movw	r6, r24
	{
		x = (100 / (float)brightness);
 234:	6c 2d       	mov	r22, r12
 236:	70 e0       	ldi	r23, 0x00	; 0
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	a3 d2       	rcall	.+1350   	; 0x784 <__floatunsisf>
 23e:	9b 01       	movw	r18, r22
 240:	ac 01       	movw	r20, r24
 242:	60 e0       	ldi	r22, 0x00	; 0
 244:	70 e0       	ldi	r23, 0x00	; 0
 246:	88 ec       	ldi	r24, 0xC8	; 200
 248:	92 e4       	ldi	r25, 0x42	; 66
 24a:	34 d2       	rcall	.+1128   	; 0x6b4 <__divsf3>
 24c:	6b 01       	movw	r12, r22
 24e:	7c 01       	movw	r14, r24
		pwm_red = r / x;
 250:	9b 01       	movw	r18, r22
 252:	ac 01       	movw	r20, r24
 254:	c3 01       	movw	r24, r6
 256:	b2 01       	movw	r22, r4
 258:	2d d2       	rcall	.+1114   	; 0x6b4 <__divsf3>
 25a:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <pwm_red>
 25e:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <pwm_red+0x1>
 262:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <pwm_red+0x2>
 266:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <pwm_red+0x3>
		pwm_green = g / x;
 26a:	a7 01       	movw	r20, r14
 26c:	96 01       	movw	r18, r12
 26e:	c5 01       	movw	r24, r10
 270:	b4 01       	movw	r22, r8
 272:	20 d2       	rcall	.+1088   	; 0x6b4 <__divsf3>
 274:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <pwm_green>
 278:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <pwm_green+0x1>
 27c:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <pwm_green+0x2>
 280:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <pwm_green+0x3>
		pwm_blue = b / x;
 284:	a7 01       	movw	r20, r14
 286:	96 01       	movw	r18, r12
 288:	69 81       	ldd	r22, Y+1	; 0x01
 28a:	7a 81       	ldd	r23, Y+2	; 0x02
 28c:	8b 81       	ldd	r24, Y+3	; 0x03
 28e:	9c 81       	ldd	r25, Y+4	; 0x04
 290:	11 d2       	rcall	.+1058   	; 0x6b4 <__divsf3>
 292:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <pwm_blue>
 296:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <pwm_blue+0x1>
 29a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <pwm_blue+0x2>
 29e:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <pwm_blue+0x3>
	}
}
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	0f 90       	pop	r0
 2a8:	0f 90       	pop	r0
 2aa:	df 91       	pop	r29
 2ac:	cf 91       	pop	r28
 2ae:	1f 91       	pop	r17
 2b0:	0f 91       	pop	r16
 2b2:	ff 90       	pop	r15
 2b4:	ef 90       	pop	r14
 2b6:	df 90       	pop	r13
 2b8:	cf 90       	pop	r12
 2ba:	bf 90       	pop	r11
 2bc:	af 90       	pop	r10
 2be:	9f 90       	pop	r9
 2c0:	8f 90       	pop	r8
 2c2:	7f 90       	pop	r7
 2c4:	6f 90       	pop	r6
 2c6:	5f 90       	pop	r5
 2c8:	4f 90       	pop	r4
 2ca:	08 95       	ret

000002cc <rgb_Rainbow>:
void rgb_Rainbow()
{
 2cc:	4f 92       	push	r4
 2ce:	5f 92       	push	r5
 2d0:	6f 92       	push	r6
 2d2:	7f 92       	push	r7
 2d4:	8f 92       	push	r8
 2d6:	9f 92       	push	r9
 2d8:	af 92       	push	r10
 2da:	bf 92       	push	r11
 2dc:	cf 92       	push	r12
 2de:	ef 92       	push	r14
 2e0:	ff 92       	push	r15
 2e2:	0f 93       	push	r16
 2e4:	1f 93       	push	r17
 2e6:	cf 93       	push	r28
 2e8:	df 93       	push	r29
	while (g < 100)
 2ea:	2e c0       	rjmp	.+92     	; 0x348 <rgb_Rainbow+0x7c>
	{
		g++;
 2ec:	c1 e0       	ldi	r28, 0x01	; 1
 2ee:	c6 0f       	add	r28, r22
 2f0:	c0 93 2b 01 	sts	0x012B, r28	; 0x80012b <g>
		r--;
 2f4:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <r>
 2f8:	df ef       	ldi	r29, 0xFF	; 255
 2fa:	d6 0f       	add	r29, r22
 2fc:	d0 93 01 01 	sts	0x0101, r29	; 0x800101 <r>
		rgb_Show(r, g, b, brightness);
 300:	60 91 2a 01 	lds	r22, 0x012A	; 0x80012a <b>
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	3c d2       	rcall	.+1144   	; 0x784 <__floatunsisf>
 30c:	4b 01       	movw	r8, r22
 30e:	5c 01       	movw	r10, r24
 310:	6c 2f       	mov	r22, r28
 312:	70 e0       	ldi	r23, 0x00	; 0
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	35 d2       	rcall	.+1130   	; 0x784 <__floatunsisf>
 31a:	2b 01       	movw	r4, r22
 31c:	3c 01       	movw	r6, r24
 31e:	6d 2f       	mov	r22, r29
 320:	70 e0       	ldi	r23, 0x00	; 0
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	2e d2       	rcall	.+1116   	; 0x784 <__floatunsisf>
 328:	c0 90 02 01 	lds	r12, 0x0102	; 0x800102 <brightness>
 32c:	85 01       	movw	r16, r10
 32e:	74 01       	movw	r14, r8
 330:	a3 01       	movw	r20, r6
 332:	92 01       	movw	r18, r4
 334:	60 df       	rcall	.-320    	; 0x1f6 <rgb_Show>
 336:	2f e7       	ldi	r18, 0x7F	; 127
 338:	88 e3       	ldi	r24, 0x38	; 56
 33a:	91 e0       	ldi	r25, 0x01	; 1
 33c:	21 50       	subi	r18, 0x01	; 1
 33e:	80 40       	sbci	r24, 0x00	; 0
 340:	90 40       	sbci	r25, 0x00	; 0
 342:	e1 f7       	brne	.-8      	; 0x33c <rgb_Rainbow+0x70>
 344:	00 c0       	rjmp	.+0      	; 0x346 <rgb_Rainbow+0x7a>
 346:	00 00       	nop
		pwm_blue = b / x;
	}
}
void rgb_Rainbow()
{
	while (g < 100)
 348:	60 91 2b 01 	lds	r22, 0x012B	; 0x80012b <g>
 34c:	64 36       	cpi	r22, 0x64	; 100
 34e:	70 f2       	brcs	.-100    	; 0x2ec <rgb_Rainbow+0x20>
 350:	2b c0       	rjmp	.+86     	; 0x3a8 <rgb_Rainbow+0xdc>
		rgb_Show(r, g, b, brightness);
		_delay_ms(50);
	}
	while (b < 100)
	{
		b++;
 352:	6f 5f       	subi	r22, 0xFF	; 255
 354:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <b>
		g--;
 358:	c0 91 2b 01 	lds	r28, 0x012B	; 0x80012b <g>
 35c:	c1 50       	subi	r28, 0x01	; 1
 35e:	c0 93 2b 01 	sts	0x012B, r28	; 0x80012b <g>
		rgb_Show(r, g, b, brightness);
 362:	70 e0       	ldi	r23, 0x00	; 0
 364:	80 e0       	ldi	r24, 0x00	; 0
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	0d d2       	rcall	.+1050   	; 0x784 <__floatunsisf>
 36a:	4b 01       	movw	r8, r22
 36c:	5c 01       	movw	r10, r24
 36e:	6c 2f       	mov	r22, r28
 370:	70 e0       	ldi	r23, 0x00	; 0
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	06 d2       	rcall	.+1036   	; 0x784 <__floatunsisf>
 378:	2b 01       	movw	r4, r22
 37a:	3c 01       	movw	r6, r24
 37c:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <r>
 380:	70 e0       	ldi	r23, 0x00	; 0
 382:	80 e0       	ldi	r24, 0x00	; 0
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	fe d1       	rcall	.+1020   	; 0x784 <__floatunsisf>
 388:	c0 90 02 01 	lds	r12, 0x0102	; 0x800102 <brightness>
 38c:	85 01       	movw	r16, r10
 38e:	74 01       	movw	r14, r8
 390:	a3 01       	movw	r20, r6
 392:	92 01       	movw	r18, r4
 394:	30 df       	rcall	.-416    	; 0x1f6 <rgb_Show>
 396:	2f e7       	ldi	r18, 0x7F	; 127
 398:	88 e3       	ldi	r24, 0x38	; 56
 39a:	91 e0       	ldi	r25, 0x01	; 1
 39c:	21 50       	subi	r18, 0x01	; 1
 39e:	80 40       	sbci	r24, 0x00	; 0
 3a0:	90 40       	sbci	r25, 0x00	; 0
 3a2:	e1 f7       	brne	.-8      	; 0x39c <rgb_Rainbow+0xd0>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <rgb_Rainbow+0xda>
 3a6:	00 00       	nop
		g++;
		r--;
		rgb_Show(r, g, b, brightness);
		_delay_ms(50);
	}
	while (b < 100)
 3a8:	60 91 2a 01 	lds	r22, 0x012A	; 0x80012a <b>
 3ac:	64 36       	cpi	r22, 0x64	; 100
 3ae:	88 f2       	brcs	.-94     	; 0x352 <rgb_Rainbow+0x86>
 3b0:	2c c0       	rjmp	.+88     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
		rgb_Show(r, g, b, brightness);
		_delay_ms(50);
	}
	while (r < 100)
	{
		r++;
 3b2:	c1 e0       	ldi	r28, 0x01	; 1
 3b4:	c6 0f       	add	r28, r22
 3b6:	c0 93 01 01 	sts	0x0101, r28	; 0x800101 <r>
		b--;
 3ba:	60 91 2a 01 	lds	r22, 0x012A	; 0x80012a <b>
 3be:	61 50       	subi	r22, 0x01	; 1
 3c0:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <b>
		rgb_Show(r, g, b, brightness);
 3c4:	70 e0       	ldi	r23, 0x00	; 0
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	dc d1       	rcall	.+952    	; 0x784 <__floatunsisf>
 3cc:	2b 01       	movw	r4, r22
 3ce:	3c 01       	movw	r6, r24
 3d0:	60 91 2b 01 	lds	r22, 0x012B	; 0x80012b <g>
 3d4:	70 e0       	ldi	r23, 0x00	; 0
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	d4 d1       	rcall	.+936    	; 0x784 <__floatunsisf>
 3dc:	4b 01       	movw	r8, r22
 3de:	5c 01       	movw	r10, r24
 3e0:	6c 2f       	mov	r22, r28
 3e2:	70 e0       	ldi	r23, 0x00	; 0
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	cd d1       	rcall	.+922    	; 0x784 <__floatunsisf>
 3ea:	c0 90 02 01 	lds	r12, 0x0102	; 0x800102 <brightness>
 3ee:	83 01       	movw	r16, r6
 3f0:	72 01       	movw	r14, r4
 3f2:	a5 01       	movw	r20, r10
 3f4:	94 01       	movw	r18, r8
 3f6:	ff de       	rcall	.-514    	; 0x1f6 <rgb_Show>
 3f8:	2f e7       	ldi	r18, 0x7F	; 127
 3fa:	88 e3       	ldi	r24, 0x38	; 56
 3fc:	91 e0       	ldi	r25, 0x01	; 1
 3fe:	21 50       	subi	r18, 0x01	; 1
 400:	80 40       	sbci	r24, 0x00	; 0
 402:	90 40       	sbci	r25, 0x00	; 0
 404:	e1 f7       	brne	.-8      	; 0x3fe <rgb_Rainbow+0x132>
 406:	00 c0       	rjmp	.+0      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 408:	00 00       	nop
		b++;
		g--;
		rgb_Show(r, g, b, brightness);
		_delay_ms(50);
	}
	while (r < 100)
 40a:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <r>
 40e:	64 36       	cpi	r22, 0x64	; 100
 410:	80 f2       	brcs	.-96     	; 0x3b2 <rgb_Rainbow+0xe6>
		r++;
		b--;
		rgb_Show(r, g, b, brightness);
		_delay_ms(50);
	}
}
 412:	df 91       	pop	r29
 414:	cf 91       	pop	r28
 416:	1f 91       	pop	r17
 418:	0f 91       	pop	r16
 41a:	ff 90       	pop	r15
 41c:	ef 90       	pop	r14
 41e:	cf 90       	pop	r12
 420:	bf 90       	pop	r11
 422:	af 90       	pop	r10
 424:	9f 90       	pop	r9
 426:	8f 90       	pop	r8
 428:	7f 90       	pop	r7
 42a:	6f 90       	pop	r6
 42c:	5f 90       	pop	r5
 42e:	4f 90       	pop	r4
 430:	08 95       	ret

00000432 <rgb_pwm_handling>:

void rgb_pwm_handling()
{
 432:	cf 92       	push	r12
 434:	df 92       	push	r13
 436:	ef 92       	push	r14
 438:	ff 92       	push	r15
	if (rgb_enable)
 43a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 43e:	88 23       	and	r24, r24
 440:	09 f4       	brne	.+2      	; 0x444 <rgb_pwm_handling+0x12>
 442:	ce c0       	rjmp	.+412    	; 0x5e0 <rgb_pwm_handling+0x1ae>
	{
		h_red++;
 444:	20 e0       	ldi	r18, 0x00	; 0
 446:	30 e0       	ldi	r19, 0x00	; 0
 448:	40 e8       	ldi	r20, 0x80	; 128
 44a:	5f e3       	ldi	r21, 0x3F	; 63
 44c:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <h_red>
 450:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <h_red+0x1>
 454:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <h_red+0x2>
 458:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <h_red+0x3>
 45c:	c7 d0       	rcall	.+398    	; 0x5ec <__addsf3>
 45e:	6b 01       	movw	r12, r22
 460:	7c 01       	movw	r14, r24
 462:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <h_red>
 466:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <h_red+0x1>
 46a:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <h_red+0x2>
 46e:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <h_red+0x3>
		h_green++;
 472:	20 e0       	ldi	r18, 0x00	; 0
 474:	30 e0       	ldi	r19, 0x00	; 0
 476:	40 e8       	ldi	r20, 0x80	; 128
 478:	5f e3       	ldi	r21, 0x3F	; 63
 47a:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <h_green>
 47e:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <h_green+0x1>
 482:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <h_green+0x2>
 486:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <h_green+0x3>
 48a:	b0 d0       	rcall	.+352    	; 0x5ec <__addsf3>
 48c:	60 93 1a 01 	sts	0x011A, r22	; 0x80011a <h_green>
 490:	70 93 1b 01 	sts	0x011B, r23	; 0x80011b <h_green+0x1>
 494:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <h_green+0x2>
 498:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <h_green+0x3>
		h_blue++;
 49c:	20 e0       	ldi	r18, 0x00	; 0
 49e:	30 e0       	ldi	r19, 0x00	; 0
 4a0:	40 e8       	ldi	r20, 0x80	; 128
 4a2:	5f e3       	ldi	r21, 0x3F	; 63
 4a4:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <h_blue>
 4a8:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <h_blue+0x1>
 4ac:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <h_blue+0x2>
 4b0:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <h_blue+0x3>
 4b4:	9b d0       	rcall	.+310    	; 0x5ec <__addsf3>
 4b6:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <h_blue>
 4ba:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <h_blue+0x1>
 4be:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <h_blue+0x2>
 4c2:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <h_blue+0x3>
		
		// Switching the RED led with PWM
		if (h_red > pwm_red)
 4c6:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <pwm_red>
 4ca:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <pwm_red+0x1>
 4ce:	40 91 28 01 	lds	r20, 0x0128	; 0x800128 <pwm_red+0x2>
 4d2:	50 91 29 01 	lds	r21, 0x0129	; 0x800129 <pwm_red+0x3>
 4d6:	c7 01       	movw	r24, r14
 4d8:	b6 01       	movw	r22, r12
 4da:	e2 d1       	rcall	.+964    	; 0x8a0 <__gesf2>
 4dc:	18 16       	cp	r1, r24
 4de:	dc f4       	brge	.+54     	; 0x516 <rgb_pwm_handling+0xe4>
		{
			PORTC &=~ (1<<PC7);
 4e0:	85 b3       	in	r24, 0x15	; 21
 4e2:	8f 77       	andi	r24, 0x7F	; 127
 4e4:	85 bb       	out	0x15, r24	; 21
			if (h_red > 100)
 4e6:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <h_red>
 4ea:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <h_red+0x1>
 4ee:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <h_red+0x2>
 4f2:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <h_red+0x3>
 4f6:	20 e0       	ldi	r18, 0x00	; 0
 4f8:	30 e0       	ldi	r19, 0x00	; 0
 4fa:	48 ec       	ldi	r20, 0xC8	; 200
 4fc:	52 e4       	ldi	r21, 0x42	; 66
 4fe:	d0 d1       	rcall	.+928    	; 0x8a0 <__gesf2>
 500:	18 16       	cp	r1, r24
 502:	64 f4       	brge	.+24     	; 0x51c <rgb_pwm_handling+0xea>
			h_red = 0;
 504:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <h_red>
 508:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <h_red+0x1>
 50c:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <h_red+0x2>
 510:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <h_red+0x3>
 514:	03 c0       	rjmp	.+6      	; 0x51c <rgb_pwm_handling+0xea>
		}
		else { PORTC |= (1<<PC7); }
 516:	85 b3       	in	r24, 0x15	; 21
 518:	80 68       	ori	r24, 0x80	; 128
 51a:	85 bb       	out	0x15, r24	; 21
		
		// Switching the GREEN led with PWM
		if (h_green > pwm_green)
 51c:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <h_green>
 520:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <h_green+0x1>
 524:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <h_green+0x2>
 528:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <h_green+0x3>
 52c:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <pwm_green>
 530:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <pwm_green+0x1>
 534:	40 91 20 01 	lds	r20, 0x0120	; 0x800120 <pwm_green+0x2>
 538:	50 91 21 01 	lds	r21, 0x0121	; 0x800121 <pwm_green+0x3>
 53c:	b1 d1       	rcall	.+866    	; 0x8a0 <__gesf2>
 53e:	18 16       	cp	r1, r24
 540:	dc f4       	brge	.+54     	; 0x578 <rgb_pwm_handling+0x146>
		{
			PORTE &=~ (1<<PE2);
 542:	83 b1       	in	r24, 0x03	; 3
 544:	8b 7f       	andi	r24, 0xFB	; 251
 546:	83 b9       	out	0x03, r24	; 3
			if (h_green > 100)
 548:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <h_green>
 54c:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <h_green+0x1>
 550:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <h_green+0x2>
 554:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <h_green+0x3>
 558:	20 e0       	ldi	r18, 0x00	; 0
 55a:	30 e0       	ldi	r19, 0x00	; 0
 55c:	48 ec       	ldi	r20, 0xC8	; 200
 55e:	52 e4       	ldi	r21, 0x42	; 66
 560:	9f d1       	rcall	.+830    	; 0x8a0 <__gesf2>
 562:	18 16       	cp	r1, r24
 564:	64 f4       	brge	.+24     	; 0x57e <rgb_pwm_handling+0x14c>
			h_green = 0;
 566:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <h_green>
 56a:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <h_green+0x1>
 56e:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <h_green+0x2>
 572:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <h_green+0x3>
 576:	03 c0       	rjmp	.+6      	; 0x57e <rgb_pwm_handling+0x14c>
		}
		else { PORTE |= (1<<PE2); }
 578:	83 b1       	in	r24, 0x03	; 3
 57a:	84 60       	ori	r24, 0x04	; 4
 57c:	83 b9       	out	0x03, r24	; 3
		
		// Switching the BLUE led with PWM
		if (h_blue > pwm_blue)
 57e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <h_blue>
 582:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <h_blue+0x1>
 586:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <h_blue+0x2>
 58a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <h_blue+0x3>
 58e:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <pwm_blue>
 592:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <pwm_blue+0x1>
 596:	40 91 18 01 	lds	r20, 0x0118	; 0x800118 <pwm_blue+0x2>
 59a:	50 91 19 01 	lds	r21, 0x0119	; 0x800119 <pwm_blue+0x3>
 59e:	80 d1       	rcall	.+768    	; 0x8a0 <__gesf2>
 5a0:	18 16       	cp	r1, r24
 5a2:	dc f4       	brge	.+54     	; 0x5da <rgb_pwm_handling+0x1a8>
		{
			PORTE &=~ (1<<PE3);
 5a4:	83 b1       	in	r24, 0x03	; 3
 5a6:	87 7f       	andi	r24, 0xF7	; 247
 5a8:	83 b9       	out	0x03, r24	; 3
			if (h_blue > 100)
 5aa:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <h_blue>
 5ae:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <h_blue+0x1>
 5b2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <h_blue+0x2>
 5b6:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <h_blue+0x3>
 5ba:	20 e0       	ldi	r18, 0x00	; 0
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	48 ec       	ldi	r20, 0xC8	; 200
 5c0:	52 e4       	ldi	r21, 0x42	; 66
 5c2:	6e d1       	rcall	.+732    	; 0x8a0 <__gesf2>
 5c4:	18 16       	cp	r1, r24
 5c6:	64 f4       	brge	.+24     	; 0x5e0 <rgb_pwm_handling+0x1ae>
			h_blue = 0;
 5c8:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <h_blue>
 5cc:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <h_blue+0x1>
 5d0:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <h_blue+0x2>
 5d4:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <h_blue+0x3>
 5d8:	03 c0       	rjmp	.+6      	; 0x5e0 <rgb_pwm_handling+0x1ae>
		}
		else { PORTE |= (1<<PE3); }
 5da:	83 b1       	in	r24, 0x03	; 3
 5dc:	88 60       	ori	r24, 0x08	; 8
 5de:	83 b9       	out	0x03, r24	; 3
	}
}
 5e0:	ff 90       	pop	r15
 5e2:	ef 90       	pop	r14
 5e4:	df 90       	pop	r13
 5e6:	cf 90       	pop	r12
 5e8:	08 95       	ret

000005ea <__subsf3>:
 5ea:	50 58       	subi	r21, 0x80	; 128

000005ec <__addsf3>:
 5ec:	bb 27       	eor	r27, r27
 5ee:	aa 27       	eor	r26, r26
 5f0:	0e d0       	rcall	.+28     	; 0x60e <__addsf3x>
 5f2:	1c c1       	rjmp	.+568    	; 0x82c <__fp_round>
 5f4:	0d d1       	rcall	.+538    	; 0x810 <__fp_pscA>
 5f6:	30 f0       	brcs	.+12     	; 0x604 <__addsf3+0x18>
 5f8:	12 d1       	rcall	.+548    	; 0x81e <__fp_pscB>
 5fa:	20 f0       	brcs	.+8      	; 0x604 <__addsf3+0x18>
 5fc:	31 f4       	brne	.+12     	; 0x60a <__addsf3+0x1e>
 5fe:	9f 3f       	cpi	r25, 0xFF	; 255
 600:	11 f4       	brne	.+4      	; 0x606 <__addsf3+0x1a>
 602:	1e f4       	brtc	.+6      	; 0x60a <__addsf3+0x1e>
 604:	02 c1       	rjmp	.+516    	; 0x80a <__fp_nan>
 606:	0e f4       	brtc	.+2      	; 0x60a <__addsf3+0x1e>
 608:	e0 95       	com	r30
 60a:	e7 fb       	bst	r30, 7
 60c:	f8 c0       	rjmp	.+496    	; 0x7fe <__fp_inf>

0000060e <__addsf3x>:
 60e:	e9 2f       	mov	r30, r25
 610:	1e d1       	rcall	.+572    	; 0x84e <__fp_split3>
 612:	80 f3       	brcs	.-32     	; 0x5f4 <__addsf3+0x8>
 614:	ba 17       	cp	r27, r26
 616:	62 07       	cpc	r22, r18
 618:	73 07       	cpc	r23, r19
 61a:	84 07       	cpc	r24, r20
 61c:	95 07       	cpc	r25, r21
 61e:	18 f0       	brcs	.+6      	; 0x626 <__addsf3x+0x18>
 620:	71 f4       	brne	.+28     	; 0x63e <__addsf3x+0x30>
 622:	9e f5       	brtc	.+102    	; 0x68a <__addsf3x+0x7c>
 624:	36 c1       	rjmp	.+620    	; 0x892 <__fp_zero>
 626:	0e f4       	brtc	.+2      	; 0x62a <__addsf3x+0x1c>
 628:	e0 95       	com	r30
 62a:	0b 2e       	mov	r0, r27
 62c:	ba 2f       	mov	r27, r26
 62e:	a0 2d       	mov	r26, r0
 630:	0b 01       	movw	r0, r22
 632:	b9 01       	movw	r22, r18
 634:	90 01       	movw	r18, r0
 636:	0c 01       	movw	r0, r24
 638:	ca 01       	movw	r24, r20
 63a:	a0 01       	movw	r20, r0
 63c:	11 24       	eor	r1, r1
 63e:	ff 27       	eor	r31, r31
 640:	59 1b       	sub	r21, r25
 642:	99 f0       	breq	.+38     	; 0x66a <__addsf3x+0x5c>
 644:	59 3f       	cpi	r21, 0xF9	; 249
 646:	50 f4       	brcc	.+20     	; 0x65c <__addsf3x+0x4e>
 648:	50 3e       	cpi	r21, 0xE0	; 224
 64a:	68 f1       	brcs	.+90     	; 0x6a6 <__addsf3x+0x98>
 64c:	1a 16       	cp	r1, r26
 64e:	f0 40       	sbci	r31, 0x00	; 0
 650:	a2 2f       	mov	r26, r18
 652:	23 2f       	mov	r18, r19
 654:	34 2f       	mov	r19, r20
 656:	44 27       	eor	r20, r20
 658:	58 5f       	subi	r21, 0xF8	; 248
 65a:	f3 cf       	rjmp	.-26     	; 0x642 <__addsf3x+0x34>
 65c:	46 95       	lsr	r20
 65e:	37 95       	ror	r19
 660:	27 95       	ror	r18
 662:	a7 95       	ror	r26
 664:	f0 40       	sbci	r31, 0x00	; 0
 666:	53 95       	inc	r21
 668:	c9 f7       	brne	.-14     	; 0x65c <__addsf3x+0x4e>
 66a:	7e f4       	brtc	.+30     	; 0x68a <__addsf3x+0x7c>
 66c:	1f 16       	cp	r1, r31
 66e:	ba 0b       	sbc	r27, r26
 670:	62 0b       	sbc	r22, r18
 672:	73 0b       	sbc	r23, r19
 674:	84 0b       	sbc	r24, r20
 676:	ba f0       	brmi	.+46     	; 0x6a6 <__addsf3x+0x98>
 678:	91 50       	subi	r25, 0x01	; 1
 67a:	a1 f0       	breq	.+40     	; 0x6a4 <__addsf3x+0x96>
 67c:	ff 0f       	add	r31, r31
 67e:	bb 1f       	adc	r27, r27
 680:	66 1f       	adc	r22, r22
 682:	77 1f       	adc	r23, r23
 684:	88 1f       	adc	r24, r24
 686:	c2 f7       	brpl	.-16     	; 0x678 <__addsf3x+0x6a>
 688:	0e c0       	rjmp	.+28     	; 0x6a6 <__addsf3x+0x98>
 68a:	ba 0f       	add	r27, r26
 68c:	62 1f       	adc	r22, r18
 68e:	73 1f       	adc	r23, r19
 690:	84 1f       	adc	r24, r20
 692:	48 f4       	brcc	.+18     	; 0x6a6 <__addsf3x+0x98>
 694:	87 95       	ror	r24
 696:	77 95       	ror	r23
 698:	67 95       	ror	r22
 69a:	b7 95       	ror	r27
 69c:	f7 95       	ror	r31
 69e:	9e 3f       	cpi	r25, 0xFE	; 254
 6a0:	08 f0       	brcs	.+2      	; 0x6a4 <__addsf3x+0x96>
 6a2:	b3 cf       	rjmp	.-154    	; 0x60a <__addsf3+0x1e>
 6a4:	93 95       	inc	r25
 6a6:	88 0f       	add	r24, r24
 6a8:	08 f0       	brcs	.+2      	; 0x6ac <__addsf3x+0x9e>
 6aa:	99 27       	eor	r25, r25
 6ac:	ee 0f       	add	r30, r30
 6ae:	97 95       	ror	r25
 6b0:	87 95       	ror	r24
 6b2:	08 95       	ret

000006b4 <__divsf3>:
 6b4:	0c d0       	rcall	.+24     	; 0x6ce <__divsf3x>
 6b6:	ba c0       	rjmp	.+372    	; 0x82c <__fp_round>
 6b8:	b2 d0       	rcall	.+356    	; 0x81e <__fp_pscB>
 6ba:	40 f0       	brcs	.+16     	; 0x6cc <__divsf3+0x18>
 6bc:	a9 d0       	rcall	.+338    	; 0x810 <__fp_pscA>
 6be:	30 f0       	brcs	.+12     	; 0x6cc <__divsf3+0x18>
 6c0:	21 f4       	brne	.+8      	; 0x6ca <__divsf3+0x16>
 6c2:	5f 3f       	cpi	r21, 0xFF	; 255
 6c4:	19 f0       	breq	.+6      	; 0x6cc <__divsf3+0x18>
 6c6:	9b c0       	rjmp	.+310    	; 0x7fe <__fp_inf>
 6c8:	51 11       	cpse	r21, r1
 6ca:	e4 c0       	rjmp	.+456    	; 0x894 <__fp_szero>
 6cc:	9e c0       	rjmp	.+316    	; 0x80a <__fp_nan>

000006ce <__divsf3x>:
 6ce:	bf d0       	rcall	.+382    	; 0x84e <__fp_split3>
 6d0:	98 f3       	brcs	.-26     	; 0x6b8 <__divsf3+0x4>

000006d2 <__divsf3_pse>:
 6d2:	99 23       	and	r25, r25
 6d4:	c9 f3       	breq	.-14     	; 0x6c8 <__divsf3+0x14>
 6d6:	55 23       	and	r21, r21
 6d8:	b1 f3       	breq	.-20     	; 0x6c6 <__divsf3+0x12>
 6da:	95 1b       	sub	r25, r21
 6dc:	55 0b       	sbc	r21, r21
 6de:	bb 27       	eor	r27, r27
 6e0:	aa 27       	eor	r26, r26
 6e2:	62 17       	cp	r22, r18
 6e4:	73 07       	cpc	r23, r19
 6e6:	84 07       	cpc	r24, r20
 6e8:	38 f0       	brcs	.+14     	; 0x6f8 <__divsf3_pse+0x26>
 6ea:	9f 5f       	subi	r25, 0xFF	; 255
 6ec:	5f 4f       	sbci	r21, 0xFF	; 255
 6ee:	22 0f       	add	r18, r18
 6f0:	33 1f       	adc	r19, r19
 6f2:	44 1f       	adc	r20, r20
 6f4:	aa 1f       	adc	r26, r26
 6f6:	a9 f3       	breq	.-22     	; 0x6e2 <__divsf3_pse+0x10>
 6f8:	33 d0       	rcall	.+102    	; 0x760 <__divsf3_pse+0x8e>
 6fa:	0e 2e       	mov	r0, r30
 6fc:	3a f0       	brmi	.+14     	; 0x70c <__divsf3_pse+0x3a>
 6fe:	e0 e8       	ldi	r30, 0x80	; 128
 700:	30 d0       	rcall	.+96     	; 0x762 <__divsf3_pse+0x90>
 702:	91 50       	subi	r25, 0x01	; 1
 704:	50 40       	sbci	r21, 0x00	; 0
 706:	e6 95       	lsr	r30
 708:	00 1c       	adc	r0, r0
 70a:	ca f7       	brpl	.-14     	; 0x6fe <__divsf3_pse+0x2c>
 70c:	29 d0       	rcall	.+82     	; 0x760 <__divsf3_pse+0x8e>
 70e:	fe 2f       	mov	r31, r30
 710:	27 d0       	rcall	.+78     	; 0x760 <__divsf3_pse+0x8e>
 712:	66 0f       	add	r22, r22
 714:	77 1f       	adc	r23, r23
 716:	88 1f       	adc	r24, r24
 718:	bb 1f       	adc	r27, r27
 71a:	26 17       	cp	r18, r22
 71c:	37 07       	cpc	r19, r23
 71e:	48 07       	cpc	r20, r24
 720:	ab 07       	cpc	r26, r27
 722:	b0 e8       	ldi	r27, 0x80	; 128
 724:	09 f0       	breq	.+2      	; 0x728 <__divsf3_pse+0x56>
 726:	bb 0b       	sbc	r27, r27
 728:	80 2d       	mov	r24, r0
 72a:	bf 01       	movw	r22, r30
 72c:	ff 27       	eor	r31, r31
 72e:	93 58       	subi	r25, 0x83	; 131
 730:	5f 4f       	sbci	r21, 0xFF	; 255
 732:	2a f0       	brmi	.+10     	; 0x73e <__divsf3_pse+0x6c>
 734:	9e 3f       	cpi	r25, 0xFE	; 254
 736:	51 05       	cpc	r21, r1
 738:	68 f0       	brcs	.+26     	; 0x754 <__divsf3_pse+0x82>
 73a:	61 c0       	rjmp	.+194    	; 0x7fe <__fp_inf>
 73c:	ab c0       	rjmp	.+342    	; 0x894 <__fp_szero>
 73e:	5f 3f       	cpi	r21, 0xFF	; 255
 740:	ec f3       	brlt	.-6      	; 0x73c <__divsf3_pse+0x6a>
 742:	98 3e       	cpi	r25, 0xE8	; 232
 744:	dc f3       	brlt	.-10     	; 0x73c <__divsf3_pse+0x6a>
 746:	86 95       	lsr	r24
 748:	77 95       	ror	r23
 74a:	67 95       	ror	r22
 74c:	b7 95       	ror	r27
 74e:	f7 95       	ror	r31
 750:	9f 5f       	subi	r25, 0xFF	; 255
 752:	c9 f7       	brne	.-14     	; 0x746 <__divsf3_pse+0x74>
 754:	88 0f       	add	r24, r24
 756:	91 1d       	adc	r25, r1
 758:	96 95       	lsr	r25
 75a:	87 95       	ror	r24
 75c:	97 f9       	bld	r25, 7
 75e:	08 95       	ret
 760:	e1 e0       	ldi	r30, 0x01	; 1
 762:	66 0f       	add	r22, r22
 764:	77 1f       	adc	r23, r23
 766:	88 1f       	adc	r24, r24
 768:	bb 1f       	adc	r27, r27
 76a:	62 17       	cp	r22, r18
 76c:	73 07       	cpc	r23, r19
 76e:	84 07       	cpc	r24, r20
 770:	ba 07       	cpc	r27, r26
 772:	20 f0       	brcs	.+8      	; 0x77c <__divsf3_pse+0xaa>
 774:	62 1b       	sub	r22, r18
 776:	73 0b       	sbc	r23, r19
 778:	84 0b       	sbc	r24, r20
 77a:	ba 0b       	sbc	r27, r26
 77c:	ee 1f       	adc	r30, r30
 77e:	88 f7       	brcc	.-30     	; 0x762 <__divsf3_pse+0x90>
 780:	e0 95       	com	r30
 782:	08 95       	ret

00000784 <__floatunsisf>:
 784:	e8 94       	clt
 786:	09 c0       	rjmp	.+18     	; 0x79a <__floatsisf+0x12>

00000788 <__floatsisf>:
 788:	97 fb       	bst	r25, 7
 78a:	3e f4       	brtc	.+14     	; 0x79a <__floatsisf+0x12>
 78c:	90 95       	com	r25
 78e:	80 95       	com	r24
 790:	70 95       	com	r23
 792:	61 95       	neg	r22
 794:	7f 4f       	sbci	r23, 0xFF	; 255
 796:	8f 4f       	sbci	r24, 0xFF	; 255
 798:	9f 4f       	sbci	r25, 0xFF	; 255
 79a:	99 23       	and	r25, r25
 79c:	a9 f0       	breq	.+42     	; 0x7c8 <__floatsisf+0x40>
 79e:	f9 2f       	mov	r31, r25
 7a0:	96 e9       	ldi	r25, 0x96	; 150
 7a2:	bb 27       	eor	r27, r27
 7a4:	93 95       	inc	r25
 7a6:	f6 95       	lsr	r31
 7a8:	87 95       	ror	r24
 7aa:	77 95       	ror	r23
 7ac:	67 95       	ror	r22
 7ae:	b7 95       	ror	r27
 7b0:	f1 11       	cpse	r31, r1
 7b2:	f8 cf       	rjmp	.-16     	; 0x7a4 <__floatsisf+0x1c>
 7b4:	fa f4       	brpl	.+62     	; 0x7f4 <__floatsisf+0x6c>
 7b6:	bb 0f       	add	r27, r27
 7b8:	11 f4       	brne	.+4      	; 0x7be <__floatsisf+0x36>
 7ba:	60 ff       	sbrs	r22, 0
 7bc:	1b c0       	rjmp	.+54     	; 0x7f4 <__floatsisf+0x6c>
 7be:	6f 5f       	subi	r22, 0xFF	; 255
 7c0:	7f 4f       	sbci	r23, 0xFF	; 255
 7c2:	8f 4f       	sbci	r24, 0xFF	; 255
 7c4:	9f 4f       	sbci	r25, 0xFF	; 255
 7c6:	16 c0       	rjmp	.+44     	; 0x7f4 <__floatsisf+0x6c>
 7c8:	88 23       	and	r24, r24
 7ca:	11 f0       	breq	.+4      	; 0x7d0 <__floatsisf+0x48>
 7cc:	96 e9       	ldi	r25, 0x96	; 150
 7ce:	11 c0       	rjmp	.+34     	; 0x7f2 <__floatsisf+0x6a>
 7d0:	77 23       	and	r23, r23
 7d2:	21 f0       	breq	.+8      	; 0x7dc <__floatsisf+0x54>
 7d4:	9e e8       	ldi	r25, 0x8E	; 142
 7d6:	87 2f       	mov	r24, r23
 7d8:	76 2f       	mov	r23, r22
 7da:	05 c0       	rjmp	.+10     	; 0x7e6 <__floatsisf+0x5e>
 7dc:	66 23       	and	r22, r22
 7de:	71 f0       	breq	.+28     	; 0x7fc <__floatsisf+0x74>
 7e0:	96 e8       	ldi	r25, 0x86	; 134
 7e2:	86 2f       	mov	r24, r22
 7e4:	70 e0       	ldi	r23, 0x00	; 0
 7e6:	60 e0       	ldi	r22, 0x00	; 0
 7e8:	2a f0       	brmi	.+10     	; 0x7f4 <__floatsisf+0x6c>
 7ea:	9a 95       	dec	r25
 7ec:	66 0f       	add	r22, r22
 7ee:	77 1f       	adc	r23, r23
 7f0:	88 1f       	adc	r24, r24
 7f2:	da f7       	brpl	.-10     	; 0x7ea <__floatsisf+0x62>
 7f4:	88 0f       	add	r24, r24
 7f6:	96 95       	lsr	r25
 7f8:	87 95       	ror	r24
 7fa:	97 f9       	bld	r25, 7
 7fc:	08 95       	ret

000007fe <__fp_inf>:
 7fe:	97 f9       	bld	r25, 7
 800:	9f 67       	ori	r25, 0x7F	; 127
 802:	80 e8       	ldi	r24, 0x80	; 128
 804:	70 e0       	ldi	r23, 0x00	; 0
 806:	60 e0       	ldi	r22, 0x00	; 0
 808:	08 95       	ret

0000080a <__fp_nan>:
 80a:	9f ef       	ldi	r25, 0xFF	; 255
 80c:	80 ec       	ldi	r24, 0xC0	; 192
 80e:	08 95       	ret

00000810 <__fp_pscA>:
 810:	00 24       	eor	r0, r0
 812:	0a 94       	dec	r0
 814:	16 16       	cp	r1, r22
 816:	17 06       	cpc	r1, r23
 818:	18 06       	cpc	r1, r24
 81a:	09 06       	cpc	r0, r25
 81c:	08 95       	ret

0000081e <__fp_pscB>:
 81e:	00 24       	eor	r0, r0
 820:	0a 94       	dec	r0
 822:	12 16       	cp	r1, r18
 824:	13 06       	cpc	r1, r19
 826:	14 06       	cpc	r1, r20
 828:	05 06       	cpc	r0, r21
 82a:	08 95       	ret

0000082c <__fp_round>:
 82c:	09 2e       	mov	r0, r25
 82e:	03 94       	inc	r0
 830:	00 0c       	add	r0, r0
 832:	11 f4       	brne	.+4      	; 0x838 <__fp_round+0xc>
 834:	88 23       	and	r24, r24
 836:	52 f0       	brmi	.+20     	; 0x84c <__fp_round+0x20>
 838:	bb 0f       	add	r27, r27
 83a:	40 f4       	brcc	.+16     	; 0x84c <__fp_round+0x20>
 83c:	bf 2b       	or	r27, r31
 83e:	11 f4       	brne	.+4      	; 0x844 <__fp_round+0x18>
 840:	60 ff       	sbrs	r22, 0
 842:	04 c0       	rjmp	.+8      	; 0x84c <__fp_round+0x20>
 844:	6f 5f       	subi	r22, 0xFF	; 255
 846:	7f 4f       	sbci	r23, 0xFF	; 255
 848:	8f 4f       	sbci	r24, 0xFF	; 255
 84a:	9f 4f       	sbci	r25, 0xFF	; 255
 84c:	08 95       	ret

0000084e <__fp_split3>:
 84e:	57 fd       	sbrc	r21, 7
 850:	90 58       	subi	r25, 0x80	; 128
 852:	44 0f       	add	r20, r20
 854:	55 1f       	adc	r21, r21
 856:	59 f0       	breq	.+22     	; 0x86e <__fp_splitA+0x10>
 858:	5f 3f       	cpi	r21, 0xFF	; 255
 85a:	71 f0       	breq	.+28     	; 0x878 <__fp_splitA+0x1a>
 85c:	47 95       	ror	r20

0000085e <__fp_splitA>:
 85e:	88 0f       	add	r24, r24
 860:	97 fb       	bst	r25, 7
 862:	99 1f       	adc	r25, r25
 864:	61 f0       	breq	.+24     	; 0x87e <__fp_splitA+0x20>
 866:	9f 3f       	cpi	r25, 0xFF	; 255
 868:	79 f0       	breq	.+30     	; 0x888 <__fp_splitA+0x2a>
 86a:	87 95       	ror	r24
 86c:	08 95       	ret
 86e:	12 16       	cp	r1, r18
 870:	13 06       	cpc	r1, r19
 872:	14 06       	cpc	r1, r20
 874:	55 1f       	adc	r21, r21
 876:	f2 cf       	rjmp	.-28     	; 0x85c <__fp_split3+0xe>
 878:	46 95       	lsr	r20
 87a:	f1 df       	rcall	.-30     	; 0x85e <__fp_splitA>
 87c:	08 c0       	rjmp	.+16     	; 0x88e <__fp_splitA+0x30>
 87e:	16 16       	cp	r1, r22
 880:	17 06       	cpc	r1, r23
 882:	18 06       	cpc	r1, r24
 884:	99 1f       	adc	r25, r25
 886:	f1 cf       	rjmp	.-30     	; 0x86a <__fp_splitA+0xc>
 888:	86 95       	lsr	r24
 88a:	71 05       	cpc	r23, r1
 88c:	61 05       	cpc	r22, r1
 88e:	08 94       	sec
 890:	08 95       	ret

00000892 <__fp_zero>:
 892:	e8 94       	clt

00000894 <__fp_szero>:
 894:	bb 27       	eor	r27, r27
 896:	66 27       	eor	r22, r22
 898:	77 27       	eor	r23, r23
 89a:	cb 01       	movw	r24, r22
 89c:	97 f9       	bld	r25, 7
 89e:	08 95       	ret

000008a0 <__gesf2>:
 8a0:	03 d0       	rcall	.+6      	; 0x8a8 <__fp_cmp>
 8a2:	08 f4       	brcc	.+2      	; 0x8a6 <__gesf2+0x6>
 8a4:	8f ef       	ldi	r24, 0xFF	; 255
 8a6:	08 95       	ret

000008a8 <__fp_cmp>:
 8a8:	99 0f       	add	r25, r25
 8aa:	00 08       	sbc	r0, r0
 8ac:	55 0f       	add	r21, r21
 8ae:	aa 0b       	sbc	r26, r26
 8b0:	e0 e8       	ldi	r30, 0x80	; 128
 8b2:	fe ef       	ldi	r31, 0xFE	; 254
 8b4:	16 16       	cp	r1, r22
 8b6:	17 06       	cpc	r1, r23
 8b8:	e8 07       	cpc	r30, r24
 8ba:	f9 07       	cpc	r31, r25
 8bc:	c0 f0       	brcs	.+48     	; 0x8ee <__fp_cmp+0x46>
 8be:	12 16       	cp	r1, r18
 8c0:	13 06       	cpc	r1, r19
 8c2:	e4 07       	cpc	r30, r20
 8c4:	f5 07       	cpc	r31, r21
 8c6:	98 f0       	brcs	.+38     	; 0x8ee <__fp_cmp+0x46>
 8c8:	62 1b       	sub	r22, r18
 8ca:	73 0b       	sbc	r23, r19
 8cc:	84 0b       	sbc	r24, r20
 8ce:	95 0b       	sbc	r25, r21
 8d0:	39 f4       	brne	.+14     	; 0x8e0 <__fp_cmp+0x38>
 8d2:	0a 26       	eor	r0, r26
 8d4:	61 f0       	breq	.+24     	; 0x8ee <__fp_cmp+0x46>
 8d6:	23 2b       	or	r18, r19
 8d8:	24 2b       	or	r18, r20
 8da:	25 2b       	or	r18, r21
 8dc:	21 f4       	brne	.+8      	; 0x8e6 <__fp_cmp+0x3e>
 8de:	08 95       	ret
 8e0:	0a 26       	eor	r0, r26
 8e2:	09 f4       	brne	.+2      	; 0x8e6 <__fp_cmp+0x3e>
 8e4:	a1 40       	sbci	r26, 0x01	; 1
 8e6:	a6 95       	lsr	r26
 8e8:	8f ef       	ldi	r24, 0xFF	; 255
 8ea:	81 1d       	adc	r24, r1
 8ec:	81 1d       	adc	r24, r1
 8ee:	08 95       	ret

000008f0 <_exit>:
 8f0:	f8 94       	cli

000008f2 <__stop_program>:
 8f2:	ff cf       	rjmp	.-2      	; 0x8f2 <__stop_program>
