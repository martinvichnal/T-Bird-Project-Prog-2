
T-Bird-Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  000008e8  0000097c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008e8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  00800134  00800134  000009b0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00000a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012ab  00000000  00000000  00000acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b06  00000000  00000000  00001d77  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000843  00000000  00000000  0000287d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000220  00000000  00000000  000030c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ce  00000000  00000000  000032e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000795  00000000  00000000  000038ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00004043  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	fe c0       	rjmp	.+508    	; 0x23e <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ee       	ldi	r30, 0xE8	; 232
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 33       	cpi	r26, 0x34	; 52
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e3       	ldi	r26, 0x34	; 52
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a1 35       	cpi	r26, 0x51	; 81
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	29 d1       	rcall	.+594    	; 0x316 <main>
  c4:	0f c4       	rjmp	.+2078   	; 0x8e4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <lcd_busy>:
}

void lcd_busy(void)
{											//BF olvasása
	uint8_t busy;
	LCD_DATA_DDR &= ~(1<<PE7);				//ott olvassuk majd a BF-et (D7-PE7)
  c8:	82 b1       	in	r24, 0x02	; 2
  ca:	8f 77       	andi	r24, 0x7F	; 127
  cc:	82 b9       	out	0x02, r24	; 2
	LCD_CMD_PORT &= ~(1<<LCD_RS);			//Státusz infó
  ce:	e2 e6       	ldi	r30, 0x62	; 98
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	8d 7f       	andi	r24, 0xFD	; 253
  d6:	80 83       	st	Z, r24
	LCD_CMD_PORT |= (1<<LCD_RW);			//olvasás
  d8:	80 81       	ld	r24, Z
  da:	84 60       	ori	r24, 0x04	; 4
  dc:	80 83       	st	Z, r24
	
	do{
		busy = 0;
		LCD_CMD_PORT |= (1<<LCD_EN);		//EN<-1
  de:	e2 e6       	ldi	r30, 0x62	; 98
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	80 81       	ld	r24, Z
  e4:	88 60       	ori	r24, 0x08	; 8
  e6:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e8:	85 e0       	ldi	r24, 0x05	; 5
  ea:	8a 95       	dec	r24
  ec:	f1 f7       	brne	.-4      	; 0xea <lcd_busy+0x22>
  ee:	00 00       	nop
		_delay_us(2);						//felfutó
		busy=(LCD_DATA_PIN&(1<<PE7));		//átadjuk a BF értékét
  f0:	81 b1       	in	r24, 0x01	; 1
  f2:	80 78       	andi	r24, 0x80	; 128
		LCD_CMD_PORT &= ~(1<<LCD_EN);		//EN<-0
  f4:	90 81       	ld	r25, Z
  f6:	97 7f       	andi	r25, 0xF7	; 247
  f8:	90 83       	st	Z, r25
  fa:	95 e0       	ldi	r25, 0x05	; 5
  fc:	9a 95       	dec	r25
  fe:	f1 f7       	brne	.-4      	; 0xfc <lcd_busy+0x34>
 100:	00 00       	nop
		_delay_us(2);
		LCD_CMD_PORT |= (1<<LCD_EN);		//EN<-1
 102:	90 81       	ld	r25, Z
 104:	98 60       	ori	r25, 0x08	; 8
 106:	90 83       	st	Z, r25
 108:	95 e0       	ldi	r25, 0x05	; 5
 10a:	9a 95       	dec	r25
 10c:	f1 f7       	brne	.-4      	; 0x10a <lcd_busy+0x42>
 10e:	00 00       	nop
		_delay_us(2);
		LCD_CMD_PORT &= ~(1<<LCD_EN);		//EN<-0
 110:	90 81       	ld	r25, Z
 112:	97 7f       	andi	r25, 0xF7	; 247
 114:	90 83       	st	Z, r25
 116:	95 e0       	ldi	r25, 0x05	; 5
 118:	9a 95       	dec	r25
 11a:	f1 f7       	brne	.-4      	; 0x118 <lcd_busy+0x50>
 11c:	00 00       	nop
		_delay_us(2);
	}while(busy);
 11e:	81 11       	cpse	r24, r1
 120:	de cf       	rjmp	.-68     	; 0xde <lcd_busy+0x16>
	
	LCD_CMD_PORT &= ~(1<<LCD_RW);			//R/W<-0 write
 122:	80 81       	ld	r24, Z
 124:	8b 7f       	andi	r24, 0xFB	; 251
 126:	80 83       	st	Z, r24
	LCD_DATA_DDR |= (1<<PE7);				//PE7<-1
 128:	82 b1       	in	r24, 0x02	; 2
 12a:	80 68       	ori	r24, 0x80	; 128
 12c:	82 b9       	out	0x02, r24	; 2
 12e:	08 95       	ret

00000130 <lcd_clk>:

// E pin 0___|1|___0
void lcd_clk(void)
{
	// E <- 0	0___
	PORT_LCD_E &= ~(1 << PIN_LCD_E);
 130:	e2 e6       	ldi	r30, 0x62	; 98
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	87 7f       	andi	r24, 0xF7	; 247
 138:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 13a:	8f e9       	ldi	r24, 0x9F	; 159
 13c:	9f e0       	ldi	r25, 0x0F	; 15
 13e:	01 97       	sbiw	r24, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <lcd_clk+0xe>
 142:	00 c0       	rjmp	.+0      	; 0x144 <lcd_clk+0x14>
 144:	00 00       	nop
	_delay_ms(2);
	// E <- 1	|1|
	PORT_LCD_E |= (1 << PIN_LCD_E);
 146:	80 81       	ld	r24, Z
 148:	88 60       	ori	r24, 0x08	; 8
 14a:	80 83       	st	Z, r24
 14c:	8f e0       	ldi	r24, 0x0F	; 15
 14e:	97 e2       	ldi	r25, 0x27	; 39
 150:	01 97       	sbiw	r24, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <lcd_clk+0x20>
 154:	00 c0       	rjmp	.+0      	; 0x156 <lcd_clk+0x26>
 156:	00 00       	nop
	_delay_ms(5);
	// E <- 0	___0
	PORT_LCD_E &= ~(1 << PIN_LCD_E);
 158:	80 81       	ld	r24, Z
 15a:	87 7f       	andi	r24, 0xF7	; 247
 15c:	80 83       	st	Z, r24
 15e:	8f e6       	ldi	r24, 0x6F	; 111
 160:	97 e1       	ldi	r25, 0x17	; 23
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <lcd_clk+0x32>
 166:	00 c0       	rjmp	.+0      	; 0x168 <lcd_clk+0x38>
 168:	00 00       	nop
 16a:	08 95       	ret

0000016c <lcd_write_cmd>:

// Parancs kuldes
void lcd_write_cmd(uint8_t cmd)
{
	// RS <- 0
	PORT_LCD_RS &= ~(1 << PIN_LCD_RS);
 16c:	e2 e6       	ldi	r30, 0x62	; 98
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	90 81       	ld	r25, Z
 172:	9d 7f       	andi	r25, 0xFD	; 253
 174:	90 83       	st	Z, r25
	// R/W <- 0
	PORT_LCD_RW &= ~(1 << PIN_LCD_RW);
 176:	90 81       	ld	r25, Z
 178:	9b 7f       	andi	r25, 0xFB	; 251
 17a:	90 83       	st	Z, r25
	// 1. Felso 4 bit
	PORT_LCD_DATA &= MASK_H_LCD_DATA;
 17c:	93 b1       	in	r25, 0x03	; 3
 17e:	90 7f       	andi	r25, 0xF0	; 240
 180:	93 b9       	out	0x03, r25	; 3
	PORT_LCD_DATA |= cmd & MASK_H_LCD_DATA;
 182:	93 b1       	in	r25, 0x03	; 3
 184:	80 7f       	andi	r24, 0xF0	; 240
 186:	98 2b       	or	r25, r24
 188:	93 b9       	out	0x03, r25	; 3
	// E 0___|1|___0
	lcd_clk();
 18a:	d2 df       	rcall	.-92     	; 0x130 <lcd_clk>
	// 2. Felso 4 bit
	PORT_LCD_DATA &= MASK_L_LCD_DATA;
 18c:	83 b1       	in	r24, 0x03	; 3
 18e:	8f 70       	andi	r24, 0x0F	; 15
 190:	83 b9       	out	0x03, r24	; 3
	PORT_LCD_DATA |= cmd << MASK_L_LCD_DATA;
 192:	83 b1       	in	r24, 0x03	; 3
	// E 0___|1|___0
	lcd_clk();
 194:	83 b9       	out	0x03, r24	; 3
 196:	cc cf       	rjmp	.-104    	; 0x130 <lcd_clk>
 198:	08 95       	ret

0000019a <lcd_init>:
#include "lcd.h"

// LCD inicializalas
void lcd_init(void)
{
	DDRE |= 0xF0;
 19a:	82 b1       	in	r24, 0x02	; 2
 19c:	80 6f       	ori	r24, 0xF0	; 240
 19e:	82 b9       	out	0x02, r24	; 2
	//data7...4 out
	DDRF |= (1<<LCD_RS) | (1<<LCD_RW) | (1<<LCD_EN);		//RS, R/W, EN out
 1a0:	e1 e6       	ldi	r30, 0x61	; 97
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	8e 60       	ori	r24, 0x0E	; 14
 1a8:	80 83       	st	Z, r24
	//írás
	PORTF &= ~(LCD_RW);
 1aa:	e2 e6       	ldi	r30, 0x62	; 98
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	80 81       	ld	r24, Z
 1b0:	8d 7f       	andi	r24, 0xFD	; 253
 1b2:	80 83       	st	Z, r24
	//R/W<-0 ->write
	PORTF &= ~(1<<LCD_RS);
 1b4:	80 81       	ld	r24, Z
 1b6:	8d 7f       	andi	r24, 0xFD	; 253
 1b8:	80 83       	st	Z, r24
	//RS <-0 ->parancs
	PORTE = 0x20;
 1ba:	80 e2       	ldi	r24, 0x20	; 32
 1bc:	83 b9       	out	0x03, r24	; 3
	//0x20 parancs: Function set - Sets interface data length
	lcd_clk();
 1be:	b8 df       	rcall	.-144    	; 0x130 <lcd_clk>
	//delay
	lcd_clk();
 1c0:	b7 df       	rcall	.-146    	; 0x130 <lcd_clk>
	//__| |__
	lcd_clk();
 1c2:	b6 df       	rcall	.-148    	; 0x130 <lcd_clk>
	//4 bites üzemmód, 8x5pixel, 2soros
	//üzemmód választás
	//nem tudjuk, hogy bekapcsolás után éppen milyenben van
	lcd_write_cmd(0x28);
 1c4:	88 e2       	ldi	r24, 0x28	; 40
 1c6:	d2 df       	rcall	.-92     	; 0x16c <lcd_write_cmd>
	lcd_write_cmd(0x28);
 1c8:	88 e2       	ldi	r24, 0x28	; 40
 1ca:	d0 df       	rcall	.-96     	; 0x16c <lcd_write_cmd>
	lcd_write_cmd(0x28);
 1cc:	88 e2       	ldi	r24, 0x28	; 40
 1ce:	ce df       	rcall	.-100    	; 0x16c <lcd_write_cmd>
	//lcd alaphelyzetbe
	lcd_write_cmd(0x02);
 1d0:	82 e0       	ldi	r24, 0x02	; 2
 1d2:	cc df       	rcall	.-104    	; 0x16c <lcd_write_cmd>
 1d4:	81 e0       	ldi	r24, 0x01	; 1
	//lcd törlése
	lcd_write_cmd(0x01);
 1d6:	ca df       	rcall	.-108    	; 0x16c <lcd_write_cmd>
 1d8:	8c e0       	ldi	r24, 0x0C	; 12
 1da:	c8 cf       	rjmp	.-112    	; 0x16c <lcd_write_cmd>
	//kurzor villog, aláhúzás be, LCD be
	//LCD_cmd(0x08 | (1<<LCD_E) | (1<<LCD_CUR) | (1<<LCD_BL));
	//kurzor villog ki, aláhúzás be, LCD be
	//LCD_cmd(0x08 | (1<<LCD_E) | (1<<LCD_CUR) | (0<<LCD_BL));
	//kurzor villog ki, aláhúzás ki, LCD be
	lcd_write_cmd(0x08 | (1<<LCD_E) | (0<<LCD_CUR) | (0<<LCD_BL));
 1dc:	08 95       	ret

000001de <lcd_write_data>:
 1de:	cf 93       	push	r28
 1e0:	c8 2f       	mov	r28, r24
 1e2:	72 df       	rcall	.-284    	; 0xc8 <lcd_busy>

// Adat kuldes
void lcd_write_data(uint8_t data)
{
	lcd_busy();								//Megvárjuk még felszabadul
	LCD_CMD_PORT |= (1<<LCD_RS);			//Adatregiszter
 1e4:	e2 e6       	ldi	r30, 0x62	; 98
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	82 60       	ori	r24, 0x02	; 2
 1ec:	80 83       	st	Z, r24
	LCD_CMD_PORT &= ~(1<<LCD_RW);			//írás
 1ee:	80 81       	ld	r24, Z
 1f0:	8b 7f       	andi	r24, 0xFB	; 251
 1f2:	80 83       	st	Z, r24
	LCD_CMD_PORT &= ~(1<<LCD_EN);			//EN<-0
 1f4:	80 81       	ld	r24, Z
 1f6:	87 7f       	andi	r24, 0xF7	; 247
 1f8:	80 83       	st	Z, r24
	LCD_DATA_PORT &= ~(0xF0);
 1fa:	83 b1       	in	r24, 0x03	; 3
 1fc:	8f 70       	andi	r24, 0x0F	; 15
 1fe:	83 b9       	out	0x03, r24	; 3
	LCD_DATA_PORT |= (data&0xF0);			//4 felsõ bit kitétele
 200:	83 b1       	in	r24, 0x03	; 3
 202:	9c 2f       	mov	r25, r28
 204:	90 7f       	andi	r25, 0xF0	; 240
 206:	89 2b       	or	r24, r25
	lcd_clk();							//__| |__
 208:	83 b9       	out	0x03, r24	; 3
 20a:	92 df       	rcall	.-220    	; 0x130 <lcd_clk>
	LCD_DATA_PORT &= ~(0xF0);
 20c:	83 b1       	in	r24, 0x03	; 3
 20e:	8f 70       	andi	r24, 0x0F	; 15
 210:	83 b9       	out	0x03, r24	; 3
	LCD_DATA_PORT |= ((data<<4)&0xF0);		//alsó 4 bit kitétele
 212:	23 b1       	in	r18, 0x03	; 3
 214:	30 e1       	ldi	r19, 0x10	; 16
 216:	c3 9f       	mul	r28, r19
 218:	c0 01       	movw	r24, r0
 21a:	11 24       	eor	r1, r1
 21c:	82 2b       	or	r24, r18
	lcd_clk();
 21e:	83 b9       	out	0x03, r24	; 3
 220:	87 df       	rcall	.-242    	; 0x130 <lcd_clk>
}
 222:	cf 91       	pop	r28
 224:	08 95       	ret

00000226 <lcd_Puts>:
	_delay_ms(3);
}


void lcd_Puts(char*s)
{
 226:	cf 93       	push	r28
 228:	df 93       	push	r29
 22a:	ec 01       	movw	r28, r24
	while (*s)
 22c:	02 c0       	rjmp	.+4      	; 0x232 <lcd_Puts+0xc>
	{
		lcd_write_data(*s);
 22e:	d7 df       	rcall	.-82     	; 0x1de <lcd_write_data>
		s++;
 230:	21 96       	adiw	r28, 0x01	; 1
}


void lcd_Puts(char*s)
{
	while (*s)
 232:	88 81       	ld	r24, Y
 234:	81 11       	cpse	r24, r1
 236:	fb cf       	rjmp	.-10     	; 0x22e <lcd_Puts+0x8>
	{
		lcd_write_data(*s);
		s++;
	}
 238:	df 91       	pop	r29
 23a:	cf 91       	pop	r28
 23c:	08 95       	ret

0000023e <__vector_16>:
	}
}


ISR(TIMER0_OVF_vect)
{
 23e:	1f 92       	push	r1
 240:	0f 92       	push	r0
 242:	0f b6       	in	r0, 0x3f	; 63
 244:	0f 92       	push	r0
 246:	11 24       	eor	r1, r1
 248:	0b b6       	in	r0, 0x3b	; 59
 24a:	0f 92       	push	r0
 24c:	2f 93       	push	r18
 24e:	3f 93       	push	r19
 250:	4f 93       	push	r20
 252:	5f 93       	push	r21
 254:	6f 93       	push	r22
 256:	7f 93       	push	r23
 258:	8f 93       	push	r24
 25a:	9f 93       	push	r25
 25c:	af 93       	push	r26
 25e:	bf 93       	push	r27
 260:	ef 93       	push	r30
 262:	ff 93       	push	r31
	rgb_pwm_handling();
 264:	e0 d0       	rcall	.+448    	; 0x426 <rgb_pwm_handling>
	//sevenSegment_PutNumber(timerNum);

	if (!ido--)
 266:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <ido>
 26a:	9f ef       	ldi	r25, 0xFF	; 255
 26c:	98 0f       	add	r25, r24
 26e:	90 93 50 01 	sts	0x0150, r25	; 0x800150 <ido>
 272:	81 11       	cpse	r24, r1
 274:	10 c0       	rjmp	.+32     	; 0x296 <__vector_16+0x58>
	{
		// 7segmens szamlalo
		timerNum++;
 276:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 27a:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
 27e:	01 96       	adiw	r24, 0x01	; 1
 280:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__data_end+0x1>
 284:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
		if (timerNum == 9999)
 288:	8f 30       	cpi	r24, 0x0F	; 15
 28a:	97 42       	sbci	r25, 0x27	; 39
 28c:	21 f4       	brne	.+8      	; 0x296 <__vector_16+0x58>
		{
			timerNum = 0;
 28e:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <__data_end+0x1>
 292:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <__data_end>
		}
	}
}
 296:	ff 91       	pop	r31
 298:	ef 91       	pop	r30
 29a:	bf 91       	pop	r27
 29c:	af 91       	pop	r26
 29e:	9f 91       	pop	r25
 2a0:	8f 91       	pop	r24
 2a2:	7f 91       	pop	r23
 2a4:	6f 91       	pop	r22
 2a6:	5f 91       	pop	r21
 2a8:	4f 91       	pop	r20
 2aa:	3f 91       	pop	r19
 2ac:	2f 91       	pop	r18
 2ae:	0f 90       	pop	r0
 2b0:	0b be       	out	0x3b, r0	; 59
 2b2:	0f 90       	pop	r0
 2b4:	0f be       	out	0x3f, r0	; 63
 2b6:	0f 90       	pop	r0
 2b8:	1f 90       	pop	r1
 2ba:	18 95       	reti

000002bc <init>:
void init()
{
	// 1 - output
	// 0 - input

	DDRB &= 0x0F;	// led mask	-> 00001111 (0 - 3)
 2bc:	87 b3       	in	r24, 0x17	; 23
 2be:	8f 70       	andi	r24, 0x0F	; 15
 2c0:	87 bb       	out	0x17, r24	; 23
	DDRB |= 0xF0;	// led		-> 11110000 (0 - 3)
 2c2:	87 b3       	in	r24, 0x17	; 23
 2c4:	80 6f       	ori	r24, 0xF0	; 240
 2c6:	87 bb       	out	0x17, r24	; 23
	DDRD &= 0x0F;	// led mask	-> 00001111 (0 - 3)
 2c8:	81 b3       	in	r24, 0x11	; 17
 2ca:	8f 70       	andi	r24, 0x0F	; 15
 2cc:	81 bb       	out	0x11, r24	; 17
	DDRD |= 0xF0;	// led		-> 11110000 (4 - 7)
 2ce:	81 b3       	in	r24, 0x11	; 17
 2d0:	80 6f       	ori	r24, 0xF0	; 240
 2d2:	81 bb       	out	0x11, r24	; 17

	//DDRG = 0x00;	// Pushbuttons K0-K4
	DDRG &= 0xE0;	// Pushbuttons mask	-> 11100000	(K0 - K4)
 2d4:	e4 e6       	ldi	r30, 0x64	; 100
 2d6:	f0 e0       	ldi	r31, 0x00	; 0
 2d8:	80 81       	ld	r24, Z
 2da:	80 7e       	andi	r24, 0xE0	; 224
 2dc:	80 83       	st	Z, r24
	DDRG |= 0x00;	// Pushbuttons		-> 00000000 (K0 - K4)
 2de:	80 81       	ld	r24, Z
 2e0:	80 83       	st	Z, r24
	
	DDRE &= 0xF3;	// RGB mask	-> 11110011 (Blue & Green)
 2e2:	82 b1       	in	r24, 0x02	; 2
 2e4:	83 7f       	andi	r24, 0xF3	; 243
 2e6:	82 b9       	out	0x02, r24	; 2
	DDRE |= 0x0C;	// RGB led	-> 00001100 (Blue & Green)
 2e8:	82 b1       	in	r24, 0x02	; 2
 2ea:	8c 60       	ori	r24, 0x0C	; 12
 2ec:	82 b9       	out	0x02, r24	; 2
	DDRC &= 0x7F;	// RGB mask	-> 01111111 (Red)
 2ee:	84 b3       	in	r24, 0x14	; 20
 2f0:	8f 77       	andi	r24, 0x7F	; 127
 2f2:	84 bb       	out	0x14, r24	; 20
	DDRC |= 80;		// RGB led	-> 10000000 (Red)
 2f4:	84 b3       	in	r24, 0x14	; 20
 2f6:	80 65       	ori	r24, 0x50	; 80
 2f8:	84 bb       	out	0x14, r24	; 20
	
	DDRA = 0xFF;	// 7 Segment display
 2fa:	8f ef       	ldi	r24, 0xFF	; 255
 2fc:	8a bb       	out	0x1a, r24	; 26
	
	// Matrix keyboard
	DDRC &= 0x80;	// Matrix mask	->	10000000
 2fe:	84 b3       	in	r24, 0x14	; 20
 300:	80 78       	andi	r24, 0x80	; 128
 302:	84 bb       	out	0x14, r24	; 20
	DDRC |= 0x78;	// Matrix		->	01111000
 304:	84 b3       	in	r24, 0x14	; 20
 306:	88 67       	ori	r24, 0x78	; 120
 308:	84 bb       	out	0x14, r24	; 20
	
	
	// Timer init:
	TCCR0 = 0 << CS02 | 1 << CS01 | 0 << CS00 | 1 << WGM00 | 1 << WGM01;
 30a:	8a e4       	ldi	r24, 0x4A	; 74
 30c:	83 bf       	out	0x33, r24	; 51
	TIMSK = 1 << TOIE0;				// OverFlow enable
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	87 bf       	out	0x37, r24	; 55
	sei();
 312:	78 94       	sei
 314:	08 95       	ret

00000316 <main>:
int kor = 0;
int indicator = 0;

int main(void)
{
	init();
 316:	d2 df       	rcall	.-92     	; 0x2bc <init>
	
	lcd_init();
 318:	40 df       	rcall	.-384    	; 0x19a <lcd_init>
	lcd_write_cmd(0x01);
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	27 df       	rcall	.-434    	; 0x16c <lcd_write_cmd>
 31e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
	lcd_Puts(MENU[1]);
 322:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 326:	7f df       	rcall	.-258    	; 0x226 <lcd_Puts>
	lcd_write_cmd(0xC0);
 328:	80 ec       	ldi	r24, 0xC0	; 192
 32a:	20 df       	rcall	.-448    	; 0x16c <lcd_write_cmd>
	lcd_Puts("Hello World!");
 32c:	87 e0       	ldi	r24, 0x07	; 7
 32e:	91 e0       	ldi	r25, 0x01	; 1
 330:	7a df       	rcall	.-268    	; 0x226 <lcd_Puts>
 332:	0f 2e       	mov	r0, r31
	
	rgb_Show(0, 0, 100, 100);
 334:	f4 e6       	ldi	r31, 0x64	; 100
 336:	cf 2e       	mov	r12, r31
 338:	f0 2d       	mov	r31, r0
 33a:	e1 2c       	mov	r14, r1
 33c:	f1 2c       	mov	r15, r1
 33e:	08 ec       	ldi	r16, 0xC8	; 200
 340:	12 e4       	ldi	r17, 0x42	; 66
 342:	20 e0       	ldi	r18, 0x00	; 0
 344:	30 e0       	ldi	r19, 0x00	; 0
 346:	a9 01       	movw	r20, r18
 348:	ca 01       	movw	r24, r20
 34a:	b9 01       	movw	r22, r18
 34c:	01 d0       	rcall	.+2      	; 0x350 <rgb_Show>
 34e:	ff cf       	rjmp	.-2      	; 0x34e <main+0x38>

00000350 <rgb_Show>:
 350:	4f 92       	push	r4
 352:	5f 92       	push	r5
 354:	6f 92       	push	r6
 356:	7f 92       	push	r7
 358:	8f 92       	push	r8
 35a:	9f 92       	push	r9
 35c:	af 92       	push	r10
 35e:	bf 92       	push	r11
 360:	cf 92       	push	r12
 362:	df 92       	push	r13
 364:	ef 92       	push	r14
 366:	ff 92       	push	r15
 368:	0f 93       	push	r16
 36a:	1f 93       	push	r17
 36c:	cf 93       	push	r28
 36e:	df 93       	push	r29
 370:	00 d0       	rcall	.+0      	; 0x372 <rgb_Show+0x22>
 372:	00 d0       	rcall	.+0      	; 0x374 <rgb_Show+0x24>
 374:	cd b7       	in	r28, 0x3d	; 61
 376:	de b7       	in	r29, 0x3e	; 62
 378:	cc 20       	and	r12, r12
 37a:	09 f4       	brne	.+2      	; 0x37e <rgb_Show+0x2e>
 37c:	3f c0       	rjmp	.+126    	; 0x3fc <rgb_Show+0xac>
 37e:	e9 82       	std	Y+1, r14	; 0x01
 380:	fa 82       	std	Y+2, r15	; 0x02
 382:	0b 83       	std	Y+3, r16	; 0x03
 384:	1c 83       	std	Y+4, r17	; 0x04
 386:	49 01       	movw	r8, r18
 388:	5a 01       	movw	r10, r20
 38a:	2b 01       	movw	r4, r22
 38c:	3c 01       	movw	r6, r24
 38e:	6c 2d       	mov	r22, r12
 390:	70 e0       	ldi	r23, 0x00	; 0
 392:	80 e0       	ldi	r24, 0x00	; 0
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	f0 d1       	rcall	.+992    	; 0x778 <__floatunsisf>
 398:	9b 01       	movw	r18, r22
 39a:	ac 01       	movw	r20, r24
 39c:	60 e0       	ldi	r22, 0x00	; 0
 39e:	70 e0       	ldi	r23, 0x00	; 0
 3a0:	88 ec       	ldi	r24, 0xC8	; 200
 3a2:	92 e4       	ldi	r25, 0x42	; 66
 3a4:	81 d1       	rcall	.+770    	; 0x6a8 <__divsf3>
 3a6:	6b 01       	movw	r12, r22
 3a8:	7c 01       	movw	r14, r24
 3aa:	9b 01       	movw	r18, r22
 3ac:	ac 01       	movw	r20, r24
 3ae:	c3 01       	movw	r24, r6
 3b0:	b2 01       	movw	r22, r4
 3b2:	7a d1       	rcall	.+756    	; 0x6a8 <__divsf3>
 3b4:	60 93 4a 01 	sts	0x014A, r22	; 0x80014a <pwm_red>
 3b8:	70 93 4b 01 	sts	0x014B, r23	; 0x80014b <pwm_red+0x1>
 3bc:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <pwm_red+0x2>
 3c0:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <pwm_red+0x3>
 3c4:	a7 01       	movw	r20, r14
 3c6:	96 01       	movw	r18, r12
 3c8:	c5 01       	movw	r24, r10
 3ca:	b4 01       	movw	r22, r8
 3cc:	6d d1       	rcall	.+730    	; 0x6a8 <__divsf3>
 3ce:	60 93 42 01 	sts	0x0142, r22	; 0x800142 <pwm_green>
 3d2:	70 93 43 01 	sts	0x0143, r23	; 0x800143 <pwm_green+0x1>
 3d6:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <pwm_green+0x2>
 3da:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <pwm_green+0x3>
 3de:	a7 01       	movw	r20, r14
 3e0:	96 01       	movw	r18, r12
 3e2:	69 81       	ldd	r22, Y+1	; 0x01
 3e4:	7a 81       	ldd	r23, Y+2	; 0x02
 3e6:	8b 81       	ldd	r24, Y+3	; 0x03
 3e8:	9c 81       	ldd	r25, Y+4	; 0x04
 3ea:	5e d1       	rcall	.+700    	; 0x6a8 <__divsf3>
 3ec:	60 93 3a 01 	sts	0x013A, r22	; 0x80013a <pwm_blue>
 3f0:	70 93 3b 01 	sts	0x013B, r23	; 0x80013b <pwm_blue+0x1>
 3f4:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <pwm_blue+0x2>
 3f8:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <pwm_blue+0x3>
 3fc:	0f 90       	pop	r0
 3fe:	0f 90       	pop	r0
 400:	0f 90       	pop	r0
 402:	0f 90       	pop	r0
 404:	df 91       	pop	r29
 406:	cf 91       	pop	r28
 408:	1f 91       	pop	r17
 40a:	0f 91       	pop	r16
 40c:	ff 90       	pop	r15
 40e:	ef 90       	pop	r14
 410:	df 90       	pop	r13
 412:	cf 90       	pop	r12
 414:	bf 90       	pop	r11
 416:	af 90       	pop	r10
 418:	9f 90       	pop	r9
 41a:	8f 90       	pop	r8
 41c:	7f 90       	pop	r7
 41e:	6f 90       	pop	r6
 420:	5f 90       	pop	r5
 422:	4f 90       	pop	r4
 424:	08 95       	ret

00000426 <rgb_pwm_handling>:
 426:	cf 92       	push	r12
 428:	df 92       	push	r13
 42a:	ef 92       	push	r14
 42c:	ff 92       	push	r15
 42e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <rgb_enable>
 432:	88 23       	and	r24, r24
 434:	09 f4       	brne	.+2      	; 0x438 <rgb_pwm_handling+0x12>
 436:	ce c0       	rjmp	.+412    	; 0x5d4 <rgb_pwm_handling+0x1ae>
 438:	20 e0       	ldi	r18, 0x00	; 0
 43a:	30 e0       	ldi	r19, 0x00	; 0
 43c:	40 e8       	ldi	r20, 0x80	; 128
 43e:	5f e3       	ldi	r21, 0x3F	; 63
 440:	60 91 46 01 	lds	r22, 0x0146	; 0x800146 <h_red>
 444:	70 91 47 01 	lds	r23, 0x0147	; 0x800147 <h_red+0x1>
 448:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <h_red+0x2>
 44c:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <h_red+0x3>
 450:	c7 d0       	rcall	.+398    	; 0x5e0 <__addsf3>
 452:	6b 01       	movw	r12, r22
 454:	7c 01       	movw	r14, r24
 456:	60 93 46 01 	sts	0x0146, r22	; 0x800146 <h_red>
 45a:	70 93 47 01 	sts	0x0147, r23	; 0x800147 <h_red+0x1>
 45e:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <h_red+0x2>
 462:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <h_red+0x3>
 466:	20 e0       	ldi	r18, 0x00	; 0
 468:	30 e0       	ldi	r19, 0x00	; 0
 46a:	40 e8       	ldi	r20, 0x80	; 128
 46c:	5f e3       	ldi	r21, 0x3F	; 63
 46e:	60 91 3e 01 	lds	r22, 0x013E	; 0x80013e <h_green>
 472:	70 91 3f 01 	lds	r23, 0x013F	; 0x80013f <h_green+0x1>
 476:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <h_green+0x2>
 47a:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <h_green+0x3>
 47e:	b0 d0       	rcall	.+352    	; 0x5e0 <__addsf3>
 480:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <h_green>
 484:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <h_green+0x1>
 488:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <h_green+0x2>
 48c:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <h_green+0x3>
 490:	20 e0       	ldi	r18, 0x00	; 0
 492:	30 e0       	ldi	r19, 0x00	; 0
 494:	40 e8       	ldi	r20, 0x80	; 128
 496:	5f e3       	ldi	r21, 0x3F	; 63
 498:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <h_blue>
 49c:	70 91 37 01 	lds	r23, 0x0137	; 0x800137 <h_blue+0x1>
 4a0:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <h_blue+0x2>
 4a4:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <h_blue+0x3>
 4a8:	9b d0       	rcall	.+310    	; 0x5e0 <__addsf3>
 4aa:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <h_blue>
 4ae:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <h_blue+0x1>
 4b2:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <h_blue+0x2>
 4b6:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <h_blue+0x3>
 4ba:	20 91 4a 01 	lds	r18, 0x014A	; 0x80014a <pwm_red>
 4be:	30 91 4b 01 	lds	r19, 0x014B	; 0x80014b <pwm_red+0x1>
 4c2:	40 91 4c 01 	lds	r20, 0x014C	; 0x80014c <pwm_red+0x2>
 4c6:	50 91 4d 01 	lds	r21, 0x014D	; 0x80014d <pwm_red+0x3>
 4ca:	c7 01       	movw	r24, r14
 4cc:	b6 01       	movw	r22, r12
 4ce:	e2 d1       	rcall	.+964    	; 0x894 <__gesf2>
 4d0:	88 23       	and	r24, r24
 4d2:	dc f0       	brlt	.+54     	; 0x50a <rgb_pwm_handling+0xe4>
 4d4:	85 b3       	in	r24, 0x15	; 21
 4d6:	8f 77       	andi	r24, 0x7F	; 127
 4d8:	85 bb       	out	0x15, r24	; 21
 4da:	60 91 46 01 	lds	r22, 0x0146	; 0x800146 <h_red>
 4de:	70 91 47 01 	lds	r23, 0x0147	; 0x800147 <h_red+0x1>
 4e2:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <h_red+0x2>
 4e6:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <h_red+0x3>
 4ea:	20 e0       	ldi	r18, 0x00	; 0
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	48 ec       	ldi	r20, 0xC8	; 200
 4f0:	52 e4       	ldi	r21, 0x42	; 66
 4f2:	d0 d1       	rcall	.+928    	; 0x894 <__gesf2>
 4f4:	88 23       	and	r24, r24
 4f6:	64 f0       	brlt	.+24     	; 0x510 <rgb_pwm_handling+0xea>
 4f8:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <h_red>
 4fc:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <h_red+0x1>
 500:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <h_red+0x2>
 504:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <h_red+0x3>
 508:	03 c0       	rjmp	.+6      	; 0x510 <rgb_pwm_handling+0xea>
 50a:	85 b3       	in	r24, 0x15	; 21
 50c:	80 68       	ori	r24, 0x80	; 128
 50e:	85 bb       	out	0x15, r24	; 21
 510:	60 91 3e 01 	lds	r22, 0x013E	; 0x80013e <h_green>
 514:	70 91 3f 01 	lds	r23, 0x013F	; 0x80013f <h_green+0x1>
 518:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <h_green+0x2>
 51c:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <h_green+0x3>
 520:	20 91 42 01 	lds	r18, 0x0142	; 0x800142 <pwm_green>
 524:	30 91 43 01 	lds	r19, 0x0143	; 0x800143 <pwm_green+0x1>
 528:	40 91 44 01 	lds	r20, 0x0144	; 0x800144 <pwm_green+0x2>
 52c:	50 91 45 01 	lds	r21, 0x0145	; 0x800145 <pwm_green+0x3>
 530:	b1 d1       	rcall	.+866    	; 0x894 <__gesf2>
 532:	88 23       	and	r24, r24
 534:	dc f0       	brlt	.+54     	; 0x56c <rgb_pwm_handling+0x146>
 536:	83 b1       	in	r24, 0x03	; 3
 538:	8b 7f       	andi	r24, 0xFB	; 251
 53a:	83 b9       	out	0x03, r24	; 3
 53c:	60 91 3e 01 	lds	r22, 0x013E	; 0x80013e <h_green>
 540:	70 91 3f 01 	lds	r23, 0x013F	; 0x80013f <h_green+0x1>
 544:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <h_green+0x2>
 548:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <h_green+0x3>
 54c:	20 e0       	ldi	r18, 0x00	; 0
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	48 ec       	ldi	r20, 0xC8	; 200
 552:	52 e4       	ldi	r21, 0x42	; 66
 554:	9f d1       	rcall	.+830    	; 0x894 <__gesf2>
 556:	88 23       	and	r24, r24
 558:	64 f0       	brlt	.+24     	; 0x572 <rgb_pwm_handling+0x14c>
 55a:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <h_green>
 55e:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <h_green+0x1>
 562:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <h_green+0x2>
 566:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <h_green+0x3>
 56a:	03 c0       	rjmp	.+6      	; 0x572 <rgb_pwm_handling+0x14c>
 56c:	83 b1       	in	r24, 0x03	; 3
 56e:	84 60       	ori	r24, 0x04	; 4
 570:	83 b9       	out	0x03, r24	; 3
 572:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <h_blue>
 576:	70 91 37 01 	lds	r23, 0x0137	; 0x800137 <h_blue+0x1>
 57a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <h_blue+0x2>
 57e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <h_blue+0x3>
 582:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <pwm_blue>
 586:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <pwm_blue+0x1>
 58a:	40 91 3c 01 	lds	r20, 0x013C	; 0x80013c <pwm_blue+0x2>
 58e:	50 91 3d 01 	lds	r21, 0x013D	; 0x80013d <pwm_blue+0x3>
 592:	80 d1       	rcall	.+768    	; 0x894 <__gesf2>
 594:	88 23       	and	r24, r24
 596:	dc f0       	brlt	.+54     	; 0x5ce <rgb_pwm_handling+0x1a8>
 598:	83 b1       	in	r24, 0x03	; 3
 59a:	87 7f       	andi	r24, 0xF7	; 247
 59c:	83 b9       	out	0x03, r24	; 3
 59e:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <h_blue>
 5a2:	70 91 37 01 	lds	r23, 0x0137	; 0x800137 <h_blue+0x1>
 5a6:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <h_blue+0x2>
 5aa:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <h_blue+0x3>
 5ae:	20 e0       	ldi	r18, 0x00	; 0
 5b0:	30 e0       	ldi	r19, 0x00	; 0
 5b2:	48 ec       	ldi	r20, 0xC8	; 200
 5b4:	52 e4       	ldi	r21, 0x42	; 66
 5b6:	6e d1       	rcall	.+732    	; 0x894 <__gesf2>
 5b8:	88 23       	and	r24, r24
 5ba:	64 f0       	brlt	.+24     	; 0x5d4 <rgb_pwm_handling+0x1ae>
 5bc:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <h_blue>
 5c0:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <h_blue+0x1>
 5c4:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <h_blue+0x2>
 5c8:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <h_blue+0x3>
 5cc:	03 c0       	rjmp	.+6      	; 0x5d4 <rgb_pwm_handling+0x1ae>
 5ce:	83 b1       	in	r24, 0x03	; 3
 5d0:	88 60       	ori	r24, 0x08	; 8
 5d2:	83 b9       	out	0x03, r24	; 3
 5d4:	ff 90       	pop	r15
 5d6:	ef 90       	pop	r14
 5d8:	df 90       	pop	r13
 5da:	cf 90       	pop	r12
 5dc:	08 95       	ret

000005de <__subsf3>:
 5de:	50 58       	subi	r21, 0x80	; 128

000005e0 <__addsf3>:
 5e0:	bb 27       	eor	r27, r27
 5e2:	aa 27       	eor	r26, r26
 5e4:	0e d0       	rcall	.+28     	; 0x602 <__addsf3x>
 5e6:	1c c1       	rjmp	.+568    	; 0x820 <__fp_round>
 5e8:	0d d1       	rcall	.+538    	; 0x804 <__fp_pscA>
 5ea:	30 f0       	brcs	.+12     	; 0x5f8 <__addsf3+0x18>
 5ec:	12 d1       	rcall	.+548    	; 0x812 <__fp_pscB>
 5ee:	20 f0       	brcs	.+8      	; 0x5f8 <__addsf3+0x18>
 5f0:	31 f4       	brne	.+12     	; 0x5fe <__addsf3+0x1e>
 5f2:	9f 3f       	cpi	r25, 0xFF	; 255
 5f4:	11 f4       	brne	.+4      	; 0x5fa <__addsf3+0x1a>
 5f6:	1e f4       	brtc	.+6      	; 0x5fe <__addsf3+0x1e>
 5f8:	02 c1       	rjmp	.+516    	; 0x7fe <__fp_nan>
 5fa:	0e f4       	brtc	.+2      	; 0x5fe <__addsf3+0x1e>
 5fc:	e0 95       	com	r30
 5fe:	e7 fb       	bst	r30, 7
 600:	f8 c0       	rjmp	.+496    	; 0x7f2 <__fp_inf>

00000602 <__addsf3x>:
 602:	e9 2f       	mov	r30, r25
 604:	1e d1       	rcall	.+572    	; 0x842 <__fp_split3>
 606:	80 f3       	brcs	.-32     	; 0x5e8 <__addsf3+0x8>
 608:	ba 17       	cp	r27, r26
 60a:	62 07       	cpc	r22, r18
 60c:	73 07       	cpc	r23, r19
 60e:	84 07       	cpc	r24, r20
 610:	95 07       	cpc	r25, r21
 612:	18 f0       	brcs	.+6      	; 0x61a <__addsf3x+0x18>
 614:	71 f4       	brne	.+28     	; 0x632 <__addsf3x+0x30>
 616:	9e f5       	brtc	.+102    	; 0x67e <__addsf3x+0x7c>
 618:	36 c1       	rjmp	.+620    	; 0x886 <__fp_zero>
 61a:	0e f4       	brtc	.+2      	; 0x61e <__addsf3x+0x1c>
 61c:	e0 95       	com	r30
 61e:	0b 2e       	mov	r0, r27
 620:	ba 2f       	mov	r27, r26
 622:	a0 2d       	mov	r26, r0
 624:	0b 01       	movw	r0, r22
 626:	b9 01       	movw	r22, r18
 628:	90 01       	movw	r18, r0
 62a:	0c 01       	movw	r0, r24
 62c:	ca 01       	movw	r24, r20
 62e:	a0 01       	movw	r20, r0
 630:	11 24       	eor	r1, r1
 632:	ff 27       	eor	r31, r31
 634:	59 1b       	sub	r21, r25
 636:	99 f0       	breq	.+38     	; 0x65e <__addsf3x+0x5c>
 638:	59 3f       	cpi	r21, 0xF9	; 249
 63a:	50 f4       	brcc	.+20     	; 0x650 <__addsf3x+0x4e>
 63c:	50 3e       	cpi	r21, 0xE0	; 224
 63e:	68 f1       	brcs	.+90     	; 0x69a <__addsf3x+0x98>
 640:	1a 16       	cp	r1, r26
 642:	f0 40       	sbci	r31, 0x00	; 0
 644:	a2 2f       	mov	r26, r18
 646:	23 2f       	mov	r18, r19
 648:	34 2f       	mov	r19, r20
 64a:	44 27       	eor	r20, r20
 64c:	58 5f       	subi	r21, 0xF8	; 248
 64e:	f3 cf       	rjmp	.-26     	; 0x636 <__addsf3x+0x34>
 650:	46 95       	lsr	r20
 652:	37 95       	ror	r19
 654:	27 95       	ror	r18
 656:	a7 95       	ror	r26
 658:	f0 40       	sbci	r31, 0x00	; 0
 65a:	53 95       	inc	r21
 65c:	c9 f7       	brne	.-14     	; 0x650 <__addsf3x+0x4e>
 65e:	7e f4       	brtc	.+30     	; 0x67e <__addsf3x+0x7c>
 660:	1f 16       	cp	r1, r31
 662:	ba 0b       	sbc	r27, r26
 664:	62 0b       	sbc	r22, r18
 666:	73 0b       	sbc	r23, r19
 668:	84 0b       	sbc	r24, r20
 66a:	ba f0       	brmi	.+46     	; 0x69a <__addsf3x+0x98>
 66c:	91 50       	subi	r25, 0x01	; 1
 66e:	a1 f0       	breq	.+40     	; 0x698 <__addsf3x+0x96>
 670:	ff 0f       	add	r31, r31
 672:	bb 1f       	adc	r27, r27
 674:	66 1f       	adc	r22, r22
 676:	77 1f       	adc	r23, r23
 678:	88 1f       	adc	r24, r24
 67a:	c2 f7       	brpl	.-16     	; 0x66c <__addsf3x+0x6a>
 67c:	0e c0       	rjmp	.+28     	; 0x69a <__addsf3x+0x98>
 67e:	ba 0f       	add	r27, r26
 680:	62 1f       	adc	r22, r18
 682:	73 1f       	adc	r23, r19
 684:	84 1f       	adc	r24, r20
 686:	48 f4       	brcc	.+18     	; 0x69a <__addsf3x+0x98>
 688:	87 95       	ror	r24
 68a:	77 95       	ror	r23
 68c:	67 95       	ror	r22
 68e:	b7 95       	ror	r27
 690:	f7 95       	ror	r31
 692:	9e 3f       	cpi	r25, 0xFE	; 254
 694:	08 f0       	brcs	.+2      	; 0x698 <__addsf3x+0x96>
 696:	b3 cf       	rjmp	.-154    	; 0x5fe <__addsf3+0x1e>
 698:	93 95       	inc	r25
 69a:	88 0f       	add	r24, r24
 69c:	08 f0       	brcs	.+2      	; 0x6a0 <__addsf3x+0x9e>
 69e:	99 27       	eor	r25, r25
 6a0:	ee 0f       	add	r30, r30
 6a2:	97 95       	ror	r25
 6a4:	87 95       	ror	r24
 6a6:	08 95       	ret

000006a8 <__divsf3>:
 6a8:	0c d0       	rcall	.+24     	; 0x6c2 <__divsf3x>
 6aa:	ba c0       	rjmp	.+372    	; 0x820 <__fp_round>
 6ac:	b2 d0       	rcall	.+356    	; 0x812 <__fp_pscB>
 6ae:	40 f0       	brcs	.+16     	; 0x6c0 <__divsf3+0x18>
 6b0:	a9 d0       	rcall	.+338    	; 0x804 <__fp_pscA>
 6b2:	30 f0       	brcs	.+12     	; 0x6c0 <__divsf3+0x18>
 6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x16>
 6b6:	5f 3f       	cpi	r21, 0xFF	; 255
 6b8:	19 f0       	breq	.+6      	; 0x6c0 <__divsf3+0x18>
 6ba:	9b c0       	rjmp	.+310    	; 0x7f2 <__fp_inf>
 6bc:	51 11       	cpse	r21, r1
 6be:	e4 c0       	rjmp	.+456    	; 0x888 <__fp_szero>
 6c0:	9e c0       	rjmp	.+316    	; 0x7fe <__fp_nan>

000006c2 <__divsf3x>:
 6c2:	bf d0       	rcall	.+382    	; 0x842 <__fp_split3>
 6c4:	98 f3       	brcs	.-26     	; 0x6ac <__divsf3+0x4>

000006c6 <__divsf3_pse>:
 6c6:	99 23       	and	r25, r25
 6c8:	c9 f3       	breq	.-14     	; 0x6bc <__divsf3+0x14>
 6ca:	55 23       	and	r21, r21
 6cc:	b1 f3       	breq	.-20     	; 0x6ba <__divsf3+0x12>
 6ce:	95 1b       	sub	r25, r21
 6d0:	55 0b       	sbc	r21, r21
 6d2:	bb 27       	eor	r27, r27
 6d4:	aa 27       	eor	r26, r26
 6d6:	62 17       	cp	r22, r18
 6d8:	73 07       	cpc	r23, r19
 6da:	84 07       	cpc	r24, r20
 6dc:	38 f0       	brcs	.+14     	; 0x6ec <__divsf3_pse+0x26>
 6de:	9f 5f       	subi	r25, 0xFF	; 255
 6e0:	5f 4f       	sbci	r21, 0xFF	; 255
 6e2:	22 0f       	add	r18, r18
 6e4:	33 1f       	adc	r19, r19
 6e6:	44 1f       	adc	r20, r20
 6e8:	aa 1f       	adc	r26, r26
 6ea:	a9 f3       	breq	.-22     	; 0x6d6 <__divsf3_pse+0x10>
 6ec:	33 d0       	rcall	.+102    	; 0x754 <__divsf3_pse+0x8e>
 6ee:	0e 2e       	mov	r0, r30
 6f0:	3a f0       	brmi	.+14     	; 0x700 <__divsf3_pse+0x3a>
 6f2:	e0 e8       	ldi	r30, 0x80	; 128
 6f4:	30 d0       	rcall	.+96     	; 0x756 <__divsf3_pse+0x90>
 6f6:	91 50       	subi	r25, 0x01	; 1
 6f8:	50 40       	sbci	r21, 0x00	; 0
 6fa:	e6 95       	lsr	r30
 6fc:	00 1c       	adc	r0, r0
 6fe:	ca f7       	brpl	.-14     	; 0x6f2 <__divsf3_pse+0x2c>
 700:	29 d0       	rcall	.+82     	; 0x754 <__divsf3_pse+0x8e>
 702:	fe 2f       	mov	r31, r30
 704:	27 d0       	rcall	.+78     	; 0x754 <__divsf3_pse+0x8e>
 706:	66 0f       	add	r22, r22
 708:	77 1f       	adc	r23, r23
 70a:	88 1f       	adc	r24, r24
 70c:	bb 1f       	adc	r27, r27
 70e:	26 17       	cp	r18, r22
 710:	37 07       	cpc	r19, r23
 712:	48 07       	cpc	r20, r24
 714:	ab 07       	cpc	r26, r27
 716:	b0 e8       	ldi	r27, 0x80	; 128
 718:	09 f0       	breq	.+2      	; 0x71c <__divsf3_pse+0x56>
 71a:	bb 0b       	sbc	r27, r27
 71c:	80 2d       	mov	r24, r0
 71e:	bf 01       	movw	r22, r30
 720:	ff 27       	eor	r31, r31
 722:	93 58       	subi	r25, 0x83	; 131
 724:	5f 4f       	sbci	r21, 0xFF	; 255
 726:	2a f0       	brmi	.+10     	; 0x732 <__divsf3_pse+0x6c>
 728:	9e 3f       	cpi	r25, 0xFE	; 254
 72a:	51 05       	cpc	r21, r1
 72c:	68 f0       	brcs	.+26     	; 0x748 <__divsf3_pse+0x82>
 72e:	61 c0       	rjmp	.+194    	; 0x7f2 <__fp_inf>
 730:	ab c0       	rjmp	.+342    	; 0x888 <__fp_szero>
 732:	5f 3f       	cpi	r21, 0xFF	; 255
 734:	ec f3       	brlt	.-6      	; 0x730 <__divsf3_pse+0x6a>
 736:	98 3e       	cpi	r25, 0xE8	; 232
 738:	dc f3       	brlt	.-10     	; 0x730 <__divsf3_pse+0x6a>
 73a:	86 95       	lsr	r24
 73c:	77 95       	ror	r23
 73e:	67 95       	ror	r22
 740:	b7 95       	ror	r27
 742:	f7 95       	ror	r31
 744:	9f 5f       	subi	r25, 0xFF	; 255
 746:	c9 f7       	brne	.-14     	; 0x73a <__divsf3_pse+0x74>
 748:	88 0f       	add	r24, r24
 74a:	91 1d       	adc	r25, r1
 74c:	96 95       	lsr	r25
 74e:	87 95       	ror	r24
 750:	97 f9       	bld	r25, 7
 752:	08 95       	ret
 754:	e1 e0       	ldi	r30, 0x01	; 1
 756:	66 0f       	add	r22, r22
 758:	77 1f       	adc	r23, r23
 75a:	88 1f       	adc	r24, r24
 75c:	bb 1f       	adc	r27, r27
 75e:	62 17       	cp	r22, r18
 760:	73 07       	cpc	r23, r19
 762:	84 07       	cpc	r24, r20
 764:	ba 07       	cpc	r27, r26
 766:	20 f0       	brcs	.+8      	; 0x770 <__divsf3_pse+0xaa>
 768:	62 1b       	sub	r22, r18
 76a:	73 0b       	sbc	r23, r19
 76c:	84 0b       	sbc	r24, r20
 76e:	ba 0b       	sbc	r27, r26
 770:	ee 1f       	adc	r30, r30
 772:	88 f7       	brcc	.-30     	; 0x756 <__divsf3_pse+0x90>
 774:	e0 95       	com	r30
 776:	08 95       	ret

00000778 <__floatunsisf>:
 778:	e8 94       	clt
 77a:	09 c0       	rjmp	.+18     	; 0x78e <__floatsisf+0x12>

0000077c <__floatsisf>:
 77c:	97 fb       	bst	r25, 7
 77e:	3e f4       	brtc	.+14     	; 0x78e <__floatsisf+0x12>
 780:	90 95       	com	r25
 782:	80 95       	com	r24
 784:	70 95       	com	r23
 786:	61 95       	neg	r22
 788:	7f 4f       	sbci	r23, 0xFF	; 255
 78a:	8f 4f       	sbci	r24, 0xFF	; 255
 78c:	9f 4f       	sbci	r25, 0xFF	; 255
 78e:	99 23       	and	r25, r25
 790:	a9 f0       	breq	.+42     	; 0x7bc <__floatsisf+0x40>
 792:	f9 2f       	mov	r31, r25
 794:	96 e9       	ldi	r25, 0x96	; 150
 796:	bb 27       	eor	r27, r27
 798:	93 95       	inc	r25
 79a:	f6 95       	lsr	r31
 79c:	87 95       	ror	r24
 79e:	77 95       	ror	r23
 7a0:	67 95       	ror	r22
 7a2:	b7 95       	ror	r27
 7a4:	f1 11       	cpse	r31, r1
 7a6:	f8 cf       	rjmp	.-16     	; 0x798 <__floatsisf+0x1c>
 7a8:	fa f4       	brpl	.+62     	; 0x7e8 <__floatsisf+0x6c>
 7aa:	bb 0f       	add	r27, r27
 7ac:	11 f4       	brne	.+4      	; 0x7b2 <__floatsisf+0x36>
 7ae:	60 ff       	sbrs	r22, 0
 7b0:	1b c0       	rjmp	.+54     	; 0x7e8 <__floatsisf+0x6c>
 7b2:	6f 5f       	subi	r22, 0xFF	; 255
 7b4:	7f 4f       	sbci	r23, 0xFF	; 255
 7b6:	8f 4f       	sbci	r24, 0xFF	; 255
 7b8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ba:	16 c0       	rjmp	.+44     	; 0x7e8 <__floatsisf+0x6c>
 7bc:	88 23       	and	r24, r24
 7be:	11 f0       	breq	.+4      	; 0x7c4 <__floatsisf+0x48>
 7c0:	96 e9       	ldi	r25, 0x96	; 150
 7c2:	11 c0       	rjmp	.+34     	; 0x7e6 <__floatsisf+0x6a>
 7c4:	77 23       	and	r23, r23
 7c6:	21 f0       	breq	.+8      	; 0x7d0 <__floatsisf+0x54>
 7c8:	9e e8       	ldi	r25, 0x8E	; 142
 7ca:	87 2f       	mov	r24, r23
 7cc:	76 2f       	mov	r23, r22
 7ce:	05 c0       	rjmp	.+10     	; 0x7da <__floatsisf+0x5e>
 7d0:	66 23       	and	r22, r22
 7d2:	71 f0       	breq	.+28     	; 0x7f0 <__floatsisf+0x74>
 7d4:	96 e8       	ldi	r25, 0x86	; 134
 7d6:	86 2f       	mov	r24, r22
 7d8:	70 e0       	ldi	r23, 0x00	; 0
 7da:	60 e0       	ldi	r22, 0x00	; 0
 7dc:	2a f0       	brmi	.+10     	; 0x7e8 <__floatsisf+0x6c>
 7de:	9a 95       	dec	r25
 7e0:	66 0f       	add	r22, r22
 7e2:	77 1f       	adc	r23, r23
 7e4:	88 1f       	adc	r24, r24
 7e6:	da f7       	brpl	.-10     	; 0x7de <__floatsisf+0x62>
 7e8:	88 0f       	add	r24, r24
 7ea:	96 95       	lsr	r25
 7ec:	87 95       	ror	r24
 7ee:	97 f9       	bld	r25, 7
 7f0:	08 95       	ret

000007f2 <__fp_inf>:
 7f2:	97 f9       	bld	r25, 7
 7f4:	9f 67       	ori	r25, 0x7F	; 127
 7f6:	80 e8       	ldi	r24, 0x80	; 128
 7f8:	70 e0       	ldi	r23, 0x00	; 0
 7fa:	60 e0       	ldi	r22, 0x00	; 0
 7fc:	08 95       	ret

000007fe <__fp_nan>:
 7fe:	9f ef       	ldi	r25, 0xFF	; 255
 800:	80 ec       	ldi	r24, 0xC0	; 192
 802:	08 95       	ret

00000804 <__fp_pscA>:
 804:	00 24       	eor	r0, r0
 806:	0a 94       	dec	r0
 808:	16 16       	cp	r1, r22
 80a:	17 06       	cpc	r1, r23
 80c:	18 06       	cpc	r1, r24
 80e:	09 06       	cpc	r0, r25
 810:	08 95       	ret

00000812 <__fp_pscB>:
 812:	00 24       	eor	r0, r0
 814:	0a 94       	dec	r0
 816:	12 16       	cp	r1, r18
 818:	13 06       	cpc	r1, r19
 81a:	14 06       	cpc	r1, r20
 81c:	05 06       	cpc	r0, r21
 81e:	08 95       	ret

00000820 <__fp_round>:
 820:	09 2e       	mov	r0, r25
 822:	03 94       	inc	r0
 824:	00 0c       	add	r0, r0
 826:	11 f4       	brne	.+4      	; 0x82c <__fp_round+0xc>
 828:	88 23       	and	r24, r24
 82a:	52 f0       	brmi	.+20     	; 0x840 <__fp_round+0x20>
 82c:	bb 0f       	add	r27, r27
 82e:	40 f4       	brcc	.+16     	; 0x840 <__fp_round+0x20>
 830:	bf 2b       	or	r27, r31
 832:	11 f4       	brne	.+4      	; 0x838 <__fp_round+0x18>
 834:	60 ff       	sbrs	r22, 0
 836:	04 c0       	rjmp	.+8      	; 0x840 <__fp_round+0x20>
 838:	6f 5f       	subi	r22, 0xFF	; 255
 83a:	7f 4f       	sbci	r23, 0xFF	; 255
 83c:	8f 4f       	sbci	r24, 0xFF	; 255
 83e:	9f 4f       	sbci	r25, 0xFF	; 255
 840:	08 95       	ret

00000842 <__fp_split3>:
 842:	57 fd       	sbrc	r21, 7
 844:	90 58       	subi	r25, 0x80	; 128
 846:	44 0f       	add	r20, r20
 848:	55 1f       	adc	r21, r21
 84a:	59 f0       	breq	.+22     	; 0x862 <__fp_splitA+0x10>
 84c:	5f 3f       	cpi	r21, 0xFF	; 255
 84e:	71 f0       	breq	.+28     	; 0x86c <__fp_splitA+0x1a>
 850:	47 95       	ror	r20

00000852 <__fp_splitA>:
 852:	88 0f       	add	r24, r24
 854:	97 fb       	bst	r25, 7
 856:	99 1f       	adc	r25, r25
 858:	61 f0       	breq	.+24     	; 0x872 <__fp_splitA+0x20>
 85a:	9f 3f       	cpi	r25, 0xFF	; 255
 85c:	79 f0       	breq	.+30     	; 0x87c <__fp_splitA+0x2a>
 85e:	87 95       	ror	r24
 860:	08 95       	ret
 862:	12 16       	cp	r1, r18
 864:	13 06       	cpc	r1, r19
 866:	14 06       	cpc	r1, r20
 868:	55 1f       	adc	r21, r21
 86a:	f2 cf       	rjmp	.-28     	; 0x850 <__fp_split3+0xe>
 86c:	46 95       	lsr	r20
 86e:	f1 df       	rcall	.-30     	; 0x852 <__fp_splitA>
 870:	08 c0       	rjmp	.+16     	; 0x882 <__fp_splitA+0x30>
 872:	16 16       	cp	r1, r22
 874:	17 06       	cpc	r1, r23
 876:	18 06       	cpc	r1, r24
 878:	99 1f       	adc	r25, r25
 87a:	f1 cf       	rjmp	.-30     	; 0x85e <__fp_splitA+0xc>
 87c:	86 95       	lsr	r24
 87e:	71 05       	cpc	r23, r1
 880:	61 05       	cpc	r22, r1
 882:	08 94       	sec
 884:	08 95       	ret

00000886 <__fp_zero>:
 886:	e8 94       	clt

00000888 <__fp_szero>:
 888:	bb 27       	eor	r27, r27
 88a:	66 27       	eor	r22, r22
 88c:	77 27       	eor	r23, r23
 88e:	cb 01       	movw	r24, r22
 890:	97 f9       	bld	r25, 7
 892:	08 95       	ret

00000894 <__gesf2>:
 894:	03 d0       	rcall	.+6      	; 0x89c <__fp_cmp>
 896:	08 f4       	brcc	.+2      	; 0x89a <__gesf2+0x6>
 898:	8f ef       	ldi	r24, 0xFF	; 255
 89a:	08 95       	ret

0000089c <__fp_cmp>:
 89c:	99 0f       	add	r25, r25
 89e:	00 08       	sbc	r0, r0
 8a0:	55 0f       	add	r21, r21
 8a2:	aa 0b       	sbc	r26, r26
 8a4:	e0 e8       	ldi	r30, 0x80	; 128
 8a6:	fe ef       	ldi	r31, 0xFE	; 254
 8a8:	16 16       	cp	r1, r22
 8aa:	17 06       	cpc	r1, r23
 8ac:	e8 07       	cpc	r30, r24
 8ae:	f9 07       	cpc	r31, r25
 8b0:	c0 f0       	brcs	.+48     	; 0x8e2 <__fp_cmp+0x46>
 8b2:	12 16       	cp	r1, r18
 8b4:	13 06       	cpc	r1, r19
 8b6:	e4 07       	cpc	r30, r20
 8b8:	f5 07       	cpc	r31, r21
 8ba:	98 f0       	brcs	.+38     	; 0x8e2 <__fp_cmp+0x46>
 8bc:	62 1b       	sub	r22, r18
 8be:	73 0b       	sbc	r23, r19
 8c0:	84 0b       	sbc	r24, r20
 8c2:	95 0b       	sbc	r25, r21
 8c4:	39 f4       	brne	.+14     	; 0x8d4 <__fp_cmp+0x38>
 8c6:	0a 26       	eor	r0, r26
 8c8:	61 f0       	breq	.+24     	; 0x8e2 <__fp_cmp+0x46>
 8ca:	23 2b       	or	r18, r19
 8cc:	24 2b       	or	r18, r20
 8ce:	25 2b       	or	r18, r21
 8d0:	21 f4       	brne	.+8      	; 0x8da <__fp_cmp+0x3e>
 8d2:	08 95       	ret
 8d4:	0a 26       	eor	r0, r26
 8d6:	09 f4       	brne	.+2      	; 0x8da <__fp_cmp+0x3e>
 8d8:	a1 40       	sbci	r26, 0x01	; 1
 8da:	a6 95       	lsr	r26
 8dc:	8f ef       	ldi	r24, 0xFF	; 255
 8de:	81 1d       	adc	r24, r1
 8e0:	81 1d       	adc	r24, r1
 8e2:	08 95       	ret

000008e4 <_exit>:
 8e4:	f8 94       	cli

000008e6 <__stop_program>:
 8e6:	ff cf       	rjmp	.-2      	; 0x8e6 <__stop_program>
